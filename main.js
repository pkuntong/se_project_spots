!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},o=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,o):(t.disabled=!1,t.classList.remove(o.inactiveButtonClass))};function n(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?o:r}const a=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8821c207-7c9b-4450-ae25-85456081faad","Content-Type":"application/json"}});function s(e){e.target===e.currentTarget&&l(e.currentTarget)}function i(e){"Escape"===e.key&&l(document.querySelector(".modal_opened"))}function d(e){e.classList.add("modal_opened"),document.addEventListener("keydown",i),e.addEventListener("mousedown",s)}function l(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",i),e.removeEventListener("mousedown",s))}function c(t){t.preventDefault(),function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const o=t.submitter,a=o.textContent;n(!0,o,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{n(!1,o,a)}))}((function(){return a.editAvatarInfo(avatarInput.value).then((t=>{profileImage.src=t.avatar,r(avatarSubmitButton,e),l(avatarModal)}))}),t)}document.addEventListener("DOMContentLoaded",(()=>{const r=document.querySelectorAll(".modal__close-btn"),n=document.querySelector("#card-template")?.content,s=document.querySelector(".cards__list");if(console.log("Card template:",n),!n)return void console.error("Error: Card template not found.");const i=document.querySelector(".profile__avatar"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description");a.getAppInfo().then((e=>{let[t,r]=e;console.log("Fetched cards:",t),0===t.length?(console.log("No cards available"),s.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{renderCard(e)}))),i.src=r.avatar,u.textContent=r.name,m.textContent=r.about})).catch(console.error),r.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>l(t)))}));const h=document.querySelector(".profile__avatar-btn"),v=document.querySelector("#avatar-modal"),_=v.querySelector("#edit-avatar-form");h.addEventListener("click",(()=>d(v))),_.addEventListener("submit",c);const f=document.querySelector(".profile__edit-btn"),p=document.querySelector("#edit-modal"),S=p.querySelector("#edit-profile-form"),y=p.querySelector("#profile-name-input"),b=p.querySelector("#profile-description-input");f.addEventListener("click",(()=>{var r,o;y.value=u.textContent,b.value=m.textContent,r=S,o=e,[y,b].forEach((e=>{t(r,e,o)})),d(p)})),S.addEventListener("submit",handleEditProfileSubmit);const q=document.querySelector(".profile__add-btn"),E=document.querySelector("#card-modal"),C=E.querySelector("#card-form");q.addEventListener("click",(()=>d(E))),C.addEventListener("submit",handleAddCardSubmit);const g=document.querySelector("#delete-modal"),L=g.querySelector(".modal__form"),k=g.querySelector(".modal__submit-btn_type_cancel");var U;L.addEventListener("submit",handleDeleteCardSubmit),k.addEventListener("click",(()=>l(g))),U=e,document.querySelectorAll(U.formSelector).forEach((e=>{((e,r)=>{const n=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(n),console.log(a),o(n,a,r),n.forEach((s=>{s.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r})(e,r,r.validationMessage,o)})(e,s,r),o(n,a,r)}))}))})(e,U)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,