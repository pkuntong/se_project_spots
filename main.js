!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?((e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)})(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},r=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8821c207-7c9b-4450-ae25-85456081faad","Content-Type":"application/json"}});function s(e){e.target===e.currentTarget&&a(e.currentTarget)}function o(e){"Escape"===e.key&&a(document.querySelector(".modal_opened"))}function a(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",o),e.removeEventListener("mousedown",s))}function n(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){if(!cardTemplate)return console.error("Error: cardTemplate is not defined or not found."),null;const t=cardTemplate.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),s=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,s.src=e.link,s.alt=e.name,e.isLiked&&o.classList.add("card__like-btn_liked"),o.addEventListener("click",(t=>handleLike(t,e._id))),a.addEventListener("click",(()=>handleDeleteCard(t,e._id))),s.addEventListener("click",(()=>handleImageClick(e))),t}(e);r&&cardsList[t](r)}document.addEventListener("DOMContentLoaded",(()=>{const s=document.querySelectorAll(".modal__close-btn"),o=document.querySelector("#card-template")?.content,i=document.querySelector(".cards__list");var l;console.log("Card template:",o),o?(r.getAppInfo().then((e=>{let[t,r]=e;console.log("Fetched cards:",t),0===t.length?(console.log("No cards available"),i.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{n(e)}))),profileImage.src=r.avatar,profileName.textContent=r.name,profileDescription.textContent=r.about})).catch(console.error),s.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>a(t)))})),l=e,document.querySelectorAll(l.formSelector).forEach((e=>{((e,r)=>{const s=Array.from(e.querySelectorAll(r.inputSelector)),o=e.querySelector(r.submitButtonSelector);console.log(s),console.log(o),t(s,o,r),s.forEach((a=>{a.addEventListener("input",(function(){((e,t,r)=>{t.validity.valid?((e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)})(e,t,r):((e,t,r,s)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(s.inputErrorClass),o.textContent=r})(e,t,t.validationMessage,r)})(e,a,r),t(s,o,r)}))}))})(e,l)}))):console.error("Error: Card template not found.")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,