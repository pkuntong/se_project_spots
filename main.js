!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}let i,l;const s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"b3ddf623-2d0f-4e5a-a7b9-d7f30d2fad6e","Content-Type":"application/json"}});function d(e){e.target===e.currentTarget&&m(e.currentTarget)}function c(e){"Escape"===e.key&&m(document.querySelector(".modal_opened"))}function u(e){e.classList.add("modal_opened"),document.addEventListener("keydown",c),e.addEventListener("mousedown",d)}function m(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",c),e.removeEventListener("mousedown",d))}function _(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){if(!cardTemplate)return void console.error("Error: cardTemplate is not defined or not found.");const t=cardTemplate.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked&&o.classList.add("card__like-btn_liked"),o.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");s.changeLikeStatus(t,n).then((()=>{r.classList.toggle("card__like-btn_liked",!n)})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){i=e,l=t,u(deleteModal)}(t,e._id))),n.addEventListener("click",(()=>function(e){previewModalImageElement.src=e.link,previewModalImageElement.alt=e.name,previewModalCaptionElement.textContent=e.name,u(previewModal)}(e))),t}(e);cardsList[t](r)}function h(t){a((function(){return s.editAvatarInfo(avatarInput.value).then((t=>{profileImage.src=t.avatar,r(avatarSubmitButton,e),m(avatarModal)}))}),t)}function v(e){a((function(){return s.editUserInfo({name:nameInput.value,about:descriptionInput.value}).then((e=>{profileName.textContent=e.name,profileDescription.textContent=e.about,m(editProfileModal)}))}),e)}function p(t){a((function(){return s.addCard({name:titleInput.value,link:imageInput.value}).then((t=>{_(t),r(cardSubmitButton,e),m(cardModal)}))}),t)}function f(e){a((function(){return s.deleteCard(l).then((()=>{i.remove(),m(deleteModal)}))}),e,"Deleting...")}document.addEventListener("DOMContentLoaded",(()=>{const r=document.querySelectorAll(".modal__close-btn"),o=document.querySelector(".profile__edit-btn"),a=document.querySelector(".profile__avatar"),i=document.querySelector(".profile__name"),l=document.querySelector(".profile__description"),d=document.querySelector(".profile__add-btn"),c=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#edit-modal"),S=y.querySelector("#edit-profile-form"),b=y.querySelector("#profile-name-input"),q=y.querySelector("#profile-description-input"),E=document.querySelector("#card-modal"),g=E.querySelector("#card-form"),L=(E.querySelector(".modal__submit-btn"),E.querySelector("#card-link-input"),E.querySelector("#card-caption-input"),document.querySelector("#avatar-modal")),C=L.querySelector("#edit-avatar-form"),k=(L.querySelector("#profile-avatar-input"),L.querySelector(".modal__submit-btn"),document.querySelector("#delete-modal")),I=k.querySelector(".modal__form"),U=k.querySelector(".modal__submit-btn_type_cancel"),T=document.querySelector("#card-template")?.content,x=document.querySelector(".cards__list");var M;(console.log("Card template:",T),T)?(document.querySelector("#preview-modal"),document.querySelector(".modal__image"),document.querySelector(".modal__caption"),s.getAppInfo().then((e=>{let[t,r]=e;0===t.length?(console.log("No cards available"),x.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{_(e)}))),a.src=r.avatar,i.textContent=r.name,l.textContent=r.about})).catch(console.error),r.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>m(t)))})),c&&c.addEventListener("click",(()=>u(L))),C&&C.addEventListener("submit",h),o&&o.addEventListener("click",(()=>{var r,n;b.value=i.textContent,q.value=l.textContent,r=S,n=e,[b,q].forEach((e=>{t(r,e,n)})),u(y)})),S&&S.addEventListener("submit",v),d&&d.addEventListener("click",(()=>u(E))),g&&g.addEventListener("submit",p),I&&I.addEventListener("submit",f),U&&U.addEventListener("click",(()=>m(k))),M=e,document.querySelectorAll(M.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((i=>{i.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,i,r),n(o,a,r)}))}))})(e,M)}))):console.error("Error: Card template not found.")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,