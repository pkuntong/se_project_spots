!function(){"use strict";var e={d:function(t,o){for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{F8:function(){return n}});const o=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?((e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)})(t,o):(t.disabled=!1,t.classList.remove(o.inactiveButtonClass))},n=e=>{document.querySelectorAll(e.formSelector).forEach((t=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);console.log(n),console.log(r),o(n,r,t),n.forEach((a=>{a.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?((e,t,o)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(o.inputErrorClass)})(e,t,o):((e,t,o,n)=>{const r=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),r.textContent=o})(e,t,t.validationMessage,o)})(e,a,t),o(n,r,t)}))}))})(t,e)}))};const r={editButton:document.querySelector(".profile__edit-button"),modal:document.querySelector("#edit-profile-modal"),closeButton:document.querySelector("#close-profile-modal"),form:document.querySelector("#edit-profile-form"),nameInput:document.querySelector("#edit-profile-input-name"),jobInput:document.querySelector("#edit-profile-input-description"),nameElement:document.querySelector(".profile__title"),jobElement:document.querySelector(".profile__description")},a={button:document.querySelector(".profile__add-button"),modal:document.querySelector("#new-post-modal"),closeButton:document.querySelector("#close-new-post-modal"),linkInput:document.querySelector("#new-post-image-link"),nameInput:document.querySelector("#new-post-input-description"),form:document.querySelector("#new-post-form")},l={template:document.querySelector("#card-template"),list:document.querySelector(".cards__list"),modal:document.querySelector("#preview-modal"),modalImage:document.querySelector(".modal__image"),modalCloseButton:document.querySelector(".modal__close-button"),modalCaption:document.querySelector(".modal__caption")};function s(e){e.classList.add("modal_opened"),document.addEventListener("keydown",d),e.addEventListener("click",i),e.addEventListener("click",u)}function c(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",d),e.removeEventListener("click",i),e.removeEventListener("click",u)}const d=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&c(e)}},i=e=>{e.target.classList.contains("modal")&&c(e.currentTarget)},u=e=>{e.target.classList.contains("modal__close-button")&&c(e.currentTarget)};function m(e){const t=l.template.content.querySelector(".card").cloneNode(!0),o=t.querySelector(".card__title"),n=t.querySelector(".card__image"),r=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button"),c=e._id;return o.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked&&r.classList.add("card__like-button_liked"),r.addEventListener("click",(()=>{r.classList.contains("card__like-button_liked")?C.deleteLike(c).then((()=>{r.classList.remove("card__like-button_liked")})).catch((e=>console.error(`Error: ${e}`))):C.addLike(c).then((()=>{r.classList.add("card__like-button_liked")})).catch((e=>console.error(`Error: ${e}`)))})),a.addEventListener("click",(()=>{k=t,L=c,s(f)})),n.addEventListener("click",(()=>{l.modalCaption.textContent=e.name,l.modalImage.src=e.link,l.modalImage.alt=e.name,s(l.modal)})),t}r.editButton.addEventListener("click",(()=>{r.nameInput.value=r.nameElement.textContent,r.jobInput.value=r.jobElement.textContent,s(r.modal)})),r.closeButton.addEventListener("click",(()=>{c(r.modal)})),a.button.addEventListener("click",(()=>{s(a.modal)})),a.closeButton.addEventListener("click",(()=>{c(a.modal)})),r.form.addEventListener("submit",(function(e){e.preventDefault();const t=r.form.querySelector(".modal__submit-button"),o=t.textContent;t.textContent="Saving...",C.editUserInfo({name:r.nameInput.value,about:r.jobInput.value}).then((e=>{r.nameElement.textContent=e.name,r.jobElement.textContent=e.about,c(r.modal)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{t.textContent=o}))})),a.form.addEventListener("submit",(function(e){e.preventDefault();const t=a.form.querySelector(".modal__submit-button"),o=t.textContent;t.textContent="Saving...",C.addNewCard({name:a.nameInput.value,link:a.linkInput.value}).then((e=>{const t=m(e);l.list.prepend(t),a.form.reset(),c(a.modal)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{t.textContent=o}))})),l.modalCloseButton.addEventListener("click",(()=>{c(l.modal)}));const _=document.querySelector("#edit-avatar-modal"),p=_.querySelector(".modal__form"),h=document.querySelector(".profile__avatar-button"),y=(_.querySelector(".modal__submit-button"),_.querySelector(".modal__close-button")),v=_.querySelector("#edit-avatar-input-link"),b=document.querySelector(".profile__avatar");h.addEventListener("click",(()=>{s(_)})),y.addEventListener("click",(()=>{c(_)})),p.addEventListener("submit",(e=>{e.preventDefault();const t=p.querySelector(".modal__submit-button"),o=t.textContent;t.textContent="Saving...";const n=v.value;C.editAvatar(n).then((e=>{b.src=e.avatar,c(_)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{t.textContent=o}))}));const f=document.querySelector("#delete-modal"),S=document.querySelector("#delete-modal-form"),q=document.querySelector(".modal__cancel-button"),E=document.querySelector("#close-delete-modal");let k,L;S.addEventListener("submit",(e=>{e.preventDefault();const t=S.querySelector(".modal__submit-button"),o=t.textContent;t.textContent="Deleting...",C.deleteCard(L).then((()=>{k.remove(),c(f)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{t.textContent=o}))})),q.addEventListener("click",(()=>c(f))),E.addEventListener("click",(()=>c(f)));const C=new class{constructor(e){let{baseUrl:t,headers:o}=e;this._baseUrl=t,this._headers=o}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:o}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:o})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:o}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:o})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"85d7a969-7c91-4070-b3f0-78f45cb1eb48","Content-Type":"application/json"}});C.getAppInfo().then((e=>{let[t,o]=e;t.forEach((e=>{const t=m(e);l.list.append(t)})),r.nameElement.textContent=o.name,r.jobElement.textContent=o.about,b.src=o.avatar})).catch((e=>console.error(e))),n(t.validationConfig)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,