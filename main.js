!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}let s,i;const l=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7a1857b8-0326-43ef-b325-d3424afa2503","Content-Type":"application/json"}});document.addEventListener("DOMContentLoaded",(()=>{const o=document.querySelectorAll("#modal-close-btn"),c=document.querySelector(".profile__edit-btn"),d=document.querySelector(".profile__avatar"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),_=document.querySelector(".profile__add-btn"),h=document.querySelector(".profile__avatar-btn"),v=document.querySelector("#edit-modal"),f=v.querySelector("#edit-profile-form"),y=v.querySelector("#profile-name-input"),S=v.querySelector("#profile-description-input"),p=document.querySelector("#card-modal"),b=p.querySelector("#card-form"),q=p.querySelector(".modal__submit-btn"),E=p.querySelector("#card-link-input"),L=p.querySelector("#card-caption-input"),k=document.querySelector("#avatar-modal"),g=k.querySelector("#edit-avatar-form"),C=k.querySelector("#profile-avatar-input"),U=k.querySelector(".modal__submit-btn"),x=document.querySelector("#delete-modal"),$=x.querySelector(".modal__form"),A=x.querySelector(".modal__submit-btn_type_cancel"),I=document.querySelector("#card-template").content,T=document.querySelector(".cards__list"),w=document.querySelector("#preview-modal"),D=document.querySelector(".modal__image"),O=document.querySelector(".modal__caption");var P;function B(e){e.target===e.currentTarget&&J(e.currentTarget)}function N(e){"Escape"===e.key&&J(document.querySelector(".modal_opened"))}function j(e){e.classList.add("modal_opened"),document.addEventListener("keydown",N),e.addEventListener("mousedown",B)}function J(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",N),e.removeEventListener("mousedown",B)}function M(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=I.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return e.isLiked&&o.classList.add("card__like-btn_liked"),n.src=e.link,n.alt=e.alt,r.textContent=e.name,o.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");l.changeLikeStatus(t,n).then((e=>{e?(e=!0,r.classList.toggle("card__like-btn_liked")):(e=!1,r.classList.toggle("card__like-btn_liked"))})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){s=e,i=t,j(x)}(t,e._id))),n.addEventListener("click",(()=>function(e){D.src=e.link,D.alt=e.name,O.textContent=e.name,j(w)}(e))),t}(e);T[t](r)}c&&d&&u&&m?(l.getAppInfo().then((e=>{let[t,r]=e;t.reverse(),t.forEach((e=>{M(e)})),d.src=r.avatar,u.textContent=r.name,m.textContent=r.about})).catch(console.error),o.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>J(t)))})),h.addEventListener("click",(()=>{j(k)})),g.addEventListener("submit",(function(t){a((function(){return l.editAvatarInfo(C.value).then((t=>{d.src=t.avatar,r(U,e),J(k)}))}),t)})),c.addEventListener("click",(()=>{var r,n;y.value=u.textContent,S.value=m.textContent,r=f,n=e,[y,S].forEach((e=>{t(r,e,n)})),j(v)})),f.addEventListener("submit",(function(e){a((function(){return l.editUserInfo({name:y.value,about:S.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,J(v)}))}),e)})),_.addEventListener("click",(()=>{j(p)})),b.addEventListener("submit",(function(t){a((function(){return l.addCard({name:L.value,link:E.value}).then((t=>{M(t),r(q,e),J(p)}))}),t)})),$.addEventListener("submit",(function(e){a((function(){return l.deleteCard(i).then((()=>{s.remove(),J(x)}))}),e,"Deleting...")})),A.addEventListener("click",(()=>{J(x)})),P=e,document.querySelectorAll(P.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,P)}))):console.error("Some profile elements could not be found in the DOM.")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,