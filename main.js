!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}const s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8821c207-7c9b-4450-ae25-85456081faad","Content-Type":"application/json"}});function i(e){e.target===e.currentTarget&&c(e.currentTarget)}function d(e){"Escape"===e.key&&c(document.querySelector(".modal_opened"))}function l(e){e.classList.add("modal_opened"),document.addEventListener("keydown",d),e.addEventListener("mousedown",i)}function c(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",d),e.removeEventListener("mousedown",i))}function u(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e,t){const r=t.querySelector(".card").cloneNode(!0),n=r.querySelector(".card__title"),o=r.querySelector(".card__image"),a=r.querySelector(".card__like-btn"),s=r.querySelector(".card__delete-btn");return n.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&a.classList.add("card__like-btn_liked"),a.addEventListener("click",(t=>handleLike(t,e._id))),s.addEventListener("click",(()=>handleDeleteCard(r,e._id))),o.addEventListener("click",(()=>handleImageClick(e))),r}(e,arguments.length>2?arguments[2]:void 0);r&&cardsList[t](r)}function m(t){t.preventDefault(),a((function(){return s.editAvatarInfo(avatarInput.value).then((t=>{profileImage.src=t.avatar,r(avatarSubmitButton,e),c(avatarModal)}))}),t)}function h(e){e.preventDefault(),a((function(){return s.editUserInfo({name:nameInput.value,about:descriptionInput.value}).then((e=>{profileName.textContent=e.name,profileDescription.textContent=e.about,c(editProfileModal)}))}),e)}function v(t){t.preventDefault(),a((function(){return s.addCard({name:titleInput.value,link:imageInput.value}).then((t=>{u(t,"prepend",cardTemplate),r(cardSubmitButton,e),c(cardModal)}))}),t)}function _(e){e.preventDefault(),a((function(){return s.deleteCard(void 0).then((()=>{(void 0).remove(),c(deleteModal)}))}),e,"Deleting...")}document.addEventListener("DOMContentLoaded",(()=>{const r=document.querySelectorAll(".modal__close-btn"),o=document.querySelector("#card-template")?.content,a=document.querySelector(".cards__list");if(console.log("Card template:",o),!o)return void console.error("Error: Card template not found.");const i=document.querySelector(".profile__avatar"),d=document.querySelector(".profile__name"),p=document.querySelector(".profile__description");s.getAppInfo().then((e=>{let[t,r]=e;console.log("Fetched cards:",t),0===t.length?(console.log("No cards available"),a.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{u(e,"prepend",o)}))),i.src=r.avatar,d.textContent=r.name,p.textContent=r.about})).catch(console.error),r.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>c(t)))}));const f=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#avatar-modal"),S=y.querySelector("#edit-avatar-form");f.addEventListener("click",(()=>l(y))),S.addEventListener("submit",m);const b=document.querySelector(".profile__edit-btn"),q=document.querySelector("#edit-modal"),E=q.querySelector("#edit-profile-form"),g=q.querySelector("#profile-name-input"),L=q.querySelector("#profile-description-input");b.addEventListener("click",(()=>{var r,n;g.value=d.textContent,L.value=p.textContent,r=E,n=e,[g,L].forEach((e=>{t(r,e,n)})),l(q)})),E.addEventListener("submit",h);const C=document.querySelector(".profile__add-btn"),k=document.querySelector("#card-modal"),I=k.querySelector("#card-form");C.addEventListener("click",(()=>l(k))),I.addEventListener("submit",v);const U=document.querySelector("#delete-modal"),$=U.querySelector(".modal__form"),x=U.querySelector(".modal__submit-btn_type_cancel");var D;$.addEventListener("submit",_),x.addEventListener("click",(()=>c(U))),D=e,document.querySelectorAll(D.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,D)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,