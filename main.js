!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}let s,i;const c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7a1857b8-0326-43ef-b325-d3424afa2503","Content-Type":"application/json"}});document.addEventListener("DOMContentLoaded",(()=>{const o=document.querySelectorAll("#modal-close-btn"),l=document.querySelector(".profile__edit-btn"),d=document.querySelector(".profile__avatar"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),_=document.querySelector(".profile__add-btn"),h=document.querySelector(".profile__avatar-btn"),v=document.querySelector("#edit-modal"),f=v.querySelector("#edit-profile-form"),y=v.querySelector("#profile-name-input"),S=v.querySelector("#profile-description-input"),b=document.querySelector("#card-modal"),p=b.querySelector("#card-form"),q=b.querySelector(".modal__submit-btn"),E=b.querySelector("#card-link-input"),L=b.querySelector("#card-caption-input"),k=document.querySelector("#avatar-modal"),g=k.querySelector("#edit-avatar-form"),C=k.querySelector("#profile-avatar-input"),U=k.querySelector(".modal__submit-btn"),x=document.querySelector("#delete-modal"),$=x.querySelector(".modal__form"),A=x.querySelector(".modal__submit-btn_type_cancel"),I=document.querySelector("#card-template").content,T=document.querySelector(".cards__list"),w=document.querySelector("#preview-modal"),D=document.querySelector(".modal__image"),O=document.querySelector(".modal__caption");var P;function B(e){e.target===e.currentTarget&&J(e.currentTarget)}function N(e){"Escape"===e.key&&J(document.querySelector(".modal_opened"))}function j(e){e.classList.add("modal_opened"),document.addEventListener("keydown",N),e.addEventListener("mousedown",B)}function J(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",N),e.removeEventListener("mousedown",B)}function M(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=I.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__bin-btn");return e.isLiked&&o.classList.add("card__like-btn_liked"),n.src=e.link,n.alt=e.alt,r.textContent=e.name,o.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");c.changeLikeStatus(t,n).then((e=>{e?(e=!0,r.classList.toggle("card__like-btn_liked")):(e=!1,r.classList.toggle("card__like-btn_liked"))})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){s=e,i=t,j(x)}(t,e._id))),n.addEventListener("click",(()=>function(e){D.src=e.link,D.alt=e.name,O.textContent=e.name,j(w)}(e))),t}(e);T[t](r)}l&&d&&u&&m?(c.getAppInfo().then((e=>{let[t,r]=e;t.reverse(),t.forEach((e=>{M(e)})),d.src=r.avatar,u.textContent=r.name,m.textContent=r.about})).catch(console.error),o.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>J(t)))})),h.addEventListener("click",(()=>{j(k)})),g.addEventListener("submit",(function(t){a((function(){return c.editAvatarInfo(C.value).then((t=>{d.src=t.avatar,r(U,e),J(k)}))}),t)})),l.addEventListener("click",(()=>{var r,n;y.value=u.textContent,S.value=m.textContent,r=f,n=e,[y,S].forEach((e=>{t(r,e,n)})),j(v)})),f.addEventListener("submit",(function(e){a((function(){return c.editUserInfo({name:y.value,about:S.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,J(v)}))}),e)})),_.addEventListener("click",(()=>{j(b)})),p.addEventListener("submit",(function(t){a((function(){return c.addCard({name:L.value,link:E.value}).then((t=>{M(t),r(q,e),J(b)}))}),t)})),$.addEventListener("submit",(function(e){a((function(){return c.deleteCard(i).then((()=>{s.remove(),J(x)}))}),e,"Deleting...")})),A.addEventListener("click",(()=>{J(x)})),P=e,document.querySelectorAll(P.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,P)}))):console.error("Some profile elements could not be found in the DOM.")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDOUosRUFBYUMsRUFBYzhKLEVBQWM3SixLQUMvRCxNQUFNOEosRUFBZWhLLEVBQVlHLGNBQWMsSUFBSUYsRUFBYUcsWUFDaEVILEVBQWFLLFVBQVVLLElBQUlULEVBQU9MLGlCQUNsQ21LLEVBQWEzSixZQUFjMEosQ0FBWSxFQVdyQ0QsQ0FDRTlKLEVBQ0FDLEVBQ0FBLEVBQWFnSyxrQkFDYi9KLEVBSUosRUEwQ0kySixDQUFtQjdKLEVBQWFDLEVBQWNDLEdBQzlDVSxFQUFrQkMsRUFBV0osRUFBZVAsRUFDOUMsR0FBRSxHQUNGLEVBTUF1SixDQUFrQnpKLEVBQWFFLEVBQU8sS0VaeENtQyxRQUFRQyxNQUFNLHVEQWlNVSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9zY3JpcHRzL3ZhbGlkYXRpb24uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9oZWxwZXJzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9BcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xuICAgIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3N1Ym1pdC1idG5cIixcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19zdWJtaXQtYnRuX2luYWN0aXZlXCIsXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gICAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JcIixcbiAgfTtcbiAgXG4gIGNvbnN0IHNob3dJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSwgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgfTtcbiAgXG4gIGNvbnN0IGhpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICB9O1xuICBcbiAgY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICBzaG93SW5wdXRFcnJvcihcbiAgICAgICAgZm9ybUVsZW1lbnQsXG4gICAgICAgIGlucHV0RWxlbWVudCxcbiAgICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlLFxuICAgICAgICBjb25maWdcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZyk7XG4gICAgfVxuICB9O1xuICBcbiAgY29uc3QgaGFzSW52YWxpZElucHV0ID0gKGlucHV0TGlzdCkgPT4ge1xuICAgIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfTtcbiAgXG4gIGV4cG9ydCBjb25zdCBkaXNhYmxlQnV0dG9uID0gKGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH07XG4gIFxuICBjb25zdCB0b2dnbGVCdXR0b25TdGF0ZSA9IChpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGlmIChoYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgZGlzYWJsZUJ1dHRvbihidXR0b25FbGVtZW50LCBjb25maWcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH1cbiAgfTtcbiAgXG4gIGV4cG9ydCBjb25zdCByZXNldFZhbGlkYXRpb24gPSAoZm9ybUVsZW1lbnQsIGlucHV0TGlzdCwgY29uZmlnKSA9PiB7XG4gICAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXQsIGNvbmZpZyk7XG4gICAgfSk7XG4gIH07XG4gIFxuICBjb25zdCBzZXRFdmVudExpc3RlbmVycyA9IChmb3JtRWxlbWVudCwgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcihjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICBcbiAgICBjb25zb2xlLmxvZyhpbnB1dExpc3QpO1xuICAgIGNvbnNvbGUubG9nKGJ1dHRvbkVsZW1lbnQpO1xuICBcbiAgICB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZyk7XG4gIFxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgY29uZmlnKTtcbiAgICAgICAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIFxuICBleHBvcnQgY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgICBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3Rvcik7XG4gICAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICAgIHNldEV2ZW50TGlzdGVuZXJzKGZvcm1FbGVtZW50LCBjb25maWcpO1xuICAgIH0pO1xuICB9O1xuICAiLCJleHBvcnQgZnVuY3Rpb24gcmVuZGVyTG9hZGluZyhcbiAgICBpc0xvYWRpbmcsXG4gICAgYnRuLFxuICAgIGRlZmF1bHRUZXh0ID0gXCJTYXZlXCIsXG4gICAgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiXG4gICkge1xuICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICBidG4udGV4dENvbnRlbnQgPSBkZWZhdWx0VGV4dDtcbiAgICB9XG4gIH1cbiAgXG4gIGV4cG9ydCBmdW5jdGlvbiBoYW5kbGVTdWJtaXQocmVxdWVzdCwgZXZ0LCBsb2FkaW5nVGV4dCA9IFwiU2F2aW5nLi4uXCIpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgXG4gICAgY29uc3Qgc3VibWl0QnRuID0gZXZ0LnN1Ym1pdHRlcjtcbiAgICBjb25zdCBpbml0aWFsVGV4dCA9IHN1Ym1pdEJ0bi50ZXh0Q29udGVudDtcbiAgXG4gICAgcmVuZGVyTG9hZGluZyh0cnVlLCBzdWJtaXRCdG4sIGluaXRpYWxUZXh0LCBsb2FkaW5nVGV4dCk7XG4gIFxuICAgIHJlcXVlc3QoKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIHJlbmRlckxvYWRpbmcoZmFsc2UsIHN1Ym1pdEJ0biwgaW5pdGlhbFRleHQpO1xuICAgICAgfSk7XG4gIH1cbiAgIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCB7XG4gIGVuYWJsZVZhbGlkYXRpb24sXG4gIHNldHRpbmdzLFxuICByZXNldFZhbGlkYXRpb24sXG4gIGRpc2FibGVCdXR0b24sXG59IGZyb20gXCIuLi9zY3JpcHRzL3ZhbGlkYXRpb24uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL3V0aWxzL0FwaS5qc1wiO1xuaW1wb3J0IHsgaGFuZGxlU3VibWl0IH0gZnJvbSBcIi4uL3V0aWxzL2hlbHBlcnNcIjtcblxubGV0IHNlbGVjdGVkQ2FyZCwgc2VsZWN0ZWRDYXJkSWQ7XG5cbi8vIEFQSVxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiN2ExODU3YjgtMDMyNi00M2VmLWIzMjUtZDM0MjRhZmEyNTAzXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfSxcbn0pO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gIC8vIFVuaXZlcnNhbCBlbGVtZW50c1xuICBjb25zdCBjbG9zZUJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI21vZGFsLWNsb3NlLWJ0blwiKTtcblxuICAvLyBQcm9maWxlIGVsZW1lbnRzXG4gIGNvbnN0IGVkaXRQcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ0blwiKTtcbiAgY29uc3QgcHJvZmlsZUltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XG4gIGNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuICBjb25zdCBwcm9maWxlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xuICBjb25zdCBjYXJkTW9kYWxCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idG5cIik7XG4gIGNvbnN0IGF2YXRhck1vZGFsQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItYnRuXCIpO1xuXG4gIC8vIENhcmQgZm9ybSBlbGVtZW50c1xuICBjb25zdCBlZGl0UHJvZmlsZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LW1vZGFsXCIpO1xuICBjb25zdCBlZGl0UHJvZmlsZUZvcm0gPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1wcm9maWxlLWZvcm1cIik7XG4gIGNvbnN0IG5hbWVJbnB1dCA9IGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLW5hbWUtaW5wdXRcIik7XG4gIGNvbnN0IGRlc2NyaXB0aW9uSW5wdXQgPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gICAgXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiXG4gICk7XG4gIGNvbnN0IGNhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1tb2RhbFwiKTtcbiAgY29uc3QgY2FyZE1vZGFsRm9ybSA9IGNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtZm9ybVwiKTtcbiAgY29uc3QgY2FyZFN1Ym1pdEJ1dHRvbiA9IGNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnRuXCIpO1xuICBjb25zdCBpbWFnZUlucHV0ID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1saW5rLWlucHV0XCIpO1xuICBjb25zdCB0aXRsZUlucHV0ID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1jYXB0aW9uLWlucHV0XCIpO1xuXG4gIC8vIEF2YXRhciBmb3JtIGVsZW1lbnRzXG4gIGNvbnN0IGF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIik7XG4gIGNvbnN0IGF2YXRhck1vZGFsRm9ybSA9IGF2YXRhck1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1hdmF0YXItZm9ybVwiKTtcbiAgY29uc3QgYXZhdGFySW5wdXQgPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtYXZhdGFyLWlucHV0XCIpO1xuICBjb25zdCBhdmF0YXJTdWJtaXRCdXR0b24gPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnRuXCIpO1xuXG4gIC8vIERlbGV0ZSBmb3JtIGVsZW1lbnRzXG4gIGNvbnN0IGRlbGV0ZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZWxldGUtbW9kYWxcIik7XG4gIGNvbnN0IGRlbGV0ZUZvcm0gPSBkZWxldGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuICBjb25zdCBkZWxldGVDYW5jZWxCdXR0b24gPSBkZWxldGVNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICAgIFwiLm1vZGFsX19zdWJtaXQtYnRuX3R5cGVfY2FuY2VsXCJcbiAgKTtcblxuICAvLyBDYXJkLXJlbGF0ZWQgZWxlbWVudHNcbiAgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpLmNvbnRlbnQ7XG4gIGNvbnN0IGNhcmRzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XG5cbiAgLy8gUHJldmlldyBpbWFnZSBwb3B1cCBlbGVtZW50c1xuICBjb25zdCBwcmV2aWV3TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ByZXZpZXctbW9kYWxcIik7XG4gIGNvbnN0IHByZXZpZXdNb2RhbEltYWdlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xuICBjb25zdCBwcmV2aWV3TW9kYWxDYXB0aW9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XG5cbiAgLy8gRW5zdXJlIHRoYXQgeW91ciBzZWxlY3RvcnMgd29yayBieSBjaGVja2luZyBpZiB0aGUgZWxlbWVudHMgZXhpc3RcbiAgaWYgKCFlZGl0UHJvZmlsZUJ1dHRvbiB8fCAhcHJvZmlsZUltYWdlIHx8ICFwcm9maWxlTmFtZSB8fCAhcHJvZmlsZURlc2NyaXB0aW9uKSB7XG4gICAgY29uc29sZS5lcnJvcihcIlNvbWUgcHJvZmlsZSBlbGVtZW50cyBjb3VsZCBub3QgYmUgZm91bmQgaW4gdGhlIERPTS5cIik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gQVBJIGNhbGwgdG8gZ2V0IGFwcCBpbmZvXG4gIGFwaVxuICAgIC5nZXRBcHBJbmZvKClcbiAgICAudGhlbigoW2NhcmRzLCB1c2Vyc10pID0+IHtcbiAgICAgIGNhcmRzLnJldmVyc2UoKTtcbiAgICAgIGNhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcbiAgICAgICAgcmVuZGVyQ2FyZChjYXJkKTtcbiAgICAgIH0pO1xuXG4gICAgICBwcm9maWxlSW1hZ2Uuc3JjID0gdXNlcnMuYXZhdGFyO1xuICAgICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2Vycy5uYW1lO1xuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlcnMuYWJvdXQ7XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG5cbiAgLy8gRnVuY3Rpb25zXG4gIGZ1bmN0aW9uIGNsb3NlTW9kYWxPdmVybGF5KGV2dCkge1xuICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkge1xuICAgICAgY2xvc2VNb2RhbChldnQuY3VycmVudFRhcmdldCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VNb2RhbEVzYyhldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgY29uc3QgbW9kYWxPcGVuZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX29wZW5lZFwiKTtcbiAgICAgIGNsb3NlTW9kYWwobW9kYWxPcGVuZWQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9wZW5Nb2RhbChtb2RhbCkge1xuICAgIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VNb2RhbEVzYyk7XG4gICAgbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBjbG9zZU1vZGFsT3ZlcmxheSk7XG4gIH1cblxuICBmdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XG4gICAgbW9kYWwuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBjbG9zZU1vZGFsRXNjKTtcbiAgICBtb2RhbC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNsb3NlTW9kYWxPdmVybGF5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbmRlckNhcmQoaXRlbSwgbWV0aG9kID0gXCJwcmVwZW5kXCIpIHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdldENhcmRFbGVtZW50KGl0ZW0pO1xuICAgIGNhcmRzTGlzdFttZXRob2RdKGNhcmRFbGVtZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldENhcmRFbGVtZW50KGRhdGEpIHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xuICAgIGNvbnN0IGNhcmROYW1lRWxlbWVudCA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIik7XG4gICAgY29uc3QgY2FyZEltYWdlRWxlbWVudCA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgY29uc3QgY2FyZExpa2VCdXR0b24gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnRuXCIpO1xuICAgIGNvbnN0IGNhcmRCaW5CdXR0b24gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2Jpbi1idG5cIik7XG5cbiAgICBpZiAoZGF0YS5pc0xpa2VkKSB7XG4gICAgICBjYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idG5fbGlrZWRcIik7XG4gICAgfVxuXG4gICAgY2FyZEltYWdlRWxlbWVudC5zcmMgPSBkYXRhLmxpbms7XG4gICAgY2FyZEltYWdlRWxlbWVudC5hbHQgPSBkYXRhLmFsdDtcbiAgICBjYXJkTmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG5cbiAgICBjYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4gaGFuZGxlTGlrZShldnQsIGRhdGEuX2lkKSk7XG4gICAgY2FyZEJpbkJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICAgIGhhbmRsZURlbGV0ZUNhcmQoY2FyZEVsZW1lbnQsIGRhdGEuX2lkKVxuICAgICk7XG4gICAgY2FyZEltYWdlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gaGFuZGxlSW1hZ2VDbGljayhkYXRhKSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICAvLyBFdmVudCBoYW5kbGVyc1xuICBmdW5jdGlvbiBoYW5kbGVBdmF0YXJTdWJtaXQoZXZ0KSB7XG4gICAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgICByZXR1cm4gYXBpLmVkaXRBdmF0YXJJbmZvKGF2YXRhcklucHV0LnZhbHVlKS50aGVuKChhdmF0YXJEYXRhKSA9PiB7XG4gICAgICAgIHByb2ZpbGVJbWFnZS5zcmMgPSBhdmF0YXJEYXRhLmF2YXRhcjtcbiAgICAgICAgZGlzYWJsZUJ1dHRvbihhdmF0YXJTdWJtaXRCdXR0b24sIHNldHRpbmdzKTtcbiAgICAgICAgY2xvc2VNb2RhbChhdmF0YXJNb2RhbCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBoYW5kbGVTdWJtaXQobWFrZVJlcXVlc3QsIGV2dCk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVMaWtlKGV2dCwgaWQpIHtcbiAgICBjb25zdCBjYXJkTGlrZUJ1dHRvbiA9IGV2dC50YXJnZXQ7XG4gICAgY29uc3QgaXNMaWtlZCA9IGNhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImNhcmRfX2xpa2UtYnRuX2xpa2VkXCIpO1xuXG4gICAgYXBpXG4gICAgICAuY2hhbmdlTGlrZVN0YXR1cyhpZCwgaXNMaWtlZClcbiAgICAgIC50aGVuKChpc0xpa2VkKSA9PiB7XG4gICAgICAgIGlmIChpc0xpa2VkKSB7XG4gICAgICAgICAgaXNMaWtlZCA9IHRydWU7XG4gICAgICAgICAgY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnRuX2xpa2VkXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlzTGlrZWQgPSBmYWxzZTtcbiAgICAgICAgICBjYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idG5fbGlrZWRcIik7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVEZWxldGVDYXJkKGNhcmRFbGVtZW50LCBjYXJkSWQpIHtcbiAgICBzZWxlY3RlZENhcmQgPSBjYXJkRWxlbWVudDtcbiAgICBzZWxlY3RlZENhcmRJZCA9IGNhcmRJZDtcbiAgICBvcGVuTW9kYWwoZGVsZXRlTW9kYWwpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljayhkYXRhKSB7XG4gICAgcHJldmlld01vZGFsSW1hZ2VFbGVtZW50LnNyYyA9IGRhdGEubGluaztcbiAgICBwcmV2aWV3TW9kYWxJbWFnZUVsZW1lbnQuYWx0ID0gZGF0YS5uYW1lO1xuICAgIHByZXZpZXdNb2RhbENhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIG9wZW5Nb2RhbChwcmV2aWV3TW9kYWwpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRWRpdFByb2ZpbGVTdWJtaXQoZXZ0KSB7XG4gICAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgICByZXR1cm4gYXBpXG4gICAgICAgIC5lZGl0VXNlckluZm8oe1xuICAgICAgICAgIG5hbWU6IG5hbWVJbnB1dC52YWx1ZSxcbiAgICAgICAgICBhYm91dDogZGVzY3JpcHRpb25JbnB1dC52YWx1ZSxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XG4gICAgICAgICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VyRGF0YS5uYW1lO1xuICAgICAgICAgIHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHVzZXJEYXRhLmFib3V0O1xuICAgICAgICAgIGNsb3NlTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGhhbmRsZVN1Ym1pdChtYWtlUmVxdWVzdCwgZXZ0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUFkZENhcmRTdWJtaXQoZXZ0KSB7XG4gICAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgICByZXR1cm4gYXBpXG4gICAgICAgIC5hZGRDYXJkKHsgbmFtZTogdGl0bGVJbnB1dC52YWx1ZSwgbGluazogaW1hZ2VJbnB1dC52YWx1ZSB9KVxuICAgICAgICAudGhlbigoY2FyZERhdGEpID0+IHtcbiAgICAgICAgICByZW5kZXJDYXJkKGNhcmREYXRhKTtcbiAgICAgICAgICBkaXNhYmxlQnV0dG9uKGNhcmRTdWJtaXRCdXR0b24sIHNldHRpbmdzKTtcbiAgICAgICAgICBjbG9zZU1vZGFsKGNhcmRNb2RhbCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGhhbmRsZVN1Ym1pdChtYWtlUmVxdWVzdCwgZXZ0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmRTdWJtaXQoZXZ0KSB7XG4gICAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgICByZXR1cm4gYXBpLmRlbGV0ZUNhcmQoc2VsZWN0ZWRDYXJkSWQpLnRoZW4oKCkgPT4ge1xuICAgICAgICBzZWxlY3RlZENhcmQucmVtb3ZlKCk7XG4gICAgICAgIGNsb3NlTW9kYWwoZGVsZXRlTW9kYWwpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBldnQsIFwiRGVsZXRpbmcuLi5cIik7XG4gIH1cblxuICAvLyBFdmVudCBsaXN0ZW5lcnNcbiAgY2xvc2VCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgIGNvbnN0IG1vZGFsID0gYnV0dG9uLmNsb3Nlc3QoXCIubW9kYWxcIik7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjbG9zZU1vZGFsKG1vZGFsKSk7XG4gIH0pO1xuXG4gIGF2YXRhck1vZGFsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgb3Blbk1vZGFsKGF2YXRhck1vZGFsKTtcbiAgfSk7XG5cbiAgYXZhdGFyTW9kYWxGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlQXZhdGFyU3VibWl0KTtcblxuICBlZGl0UHJvZmlsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIG5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xuICAgIGRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQ7XG4gICAgcmVzZXRWYWxpZGF0aW9uKGVkaXRQcm9maWxlRm9ybSwgW25hbWVJbnB1dCwgZGVzY3JpcHRpb25JbnB1dF0sIHNldHRpbmdzKTtcbiAgICBvcGVuTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gIH0pO1xuXG4gIGVkaXRQcm9maWxlRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZUVkaXRQcm9maWxlU3VibWl0KTtcblxuICBjYXJkTW9kYWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBvcGVuTW9kYWwoY2FyZE1vZGFsKTtcbiAgfSk7XG5cbiAgY2FyZE1vZGFsRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZUFkZENhcmRTdWJtaXQpO1xuXG4gIGRlbGV0ZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVEZWxldGVDYXJkU3VibWl0KTtcblxuICBkZWxldGVDYW5jZWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjbG9zZU1vZGFsKGRlbGV0ZU1vZGFsKTtcbiAgfSk7XG5cbiAgZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XG59KTtcbiIsImNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cblxuICBnZXRBcHBJbmZvKCkge1xuICAgIHJldHVybiBQcm9taXNlLmFsbChbdGhpcy5nZXRJbml0aWFsQ2FyZHMoKSwgdGhpcy5nZXRVc2VySW5mbygpXSk7XG4gIH1cblxuICBjaGVja1Jlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIHJlcXVlc3QodXJsLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCwgb3B0aW9ucykudGhlbih0aGlzLmNoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYWJvdXQsXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGVkaXRBdmF0YXJJbmZvKGF2YXRhcikge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGFkZENhcmQoeyBuYW1lLCBsaW5rIH0pIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGxpbmssXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoaWQpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIGNoYW5nZUxpa2VTdGF0dXMoaWQsIGlzTGlrZWQpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBpc0xpa2VkID8gXCJERUxFVEVcIiA6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwaTtcbiJdLCJuYW1lcyI6WyJzZXR0aW5ncyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiaGlkZUlucHV0RXJyb3IiLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImNvbmZpZyIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiZGlzYWJsZUJ1dHRvbiIsImJ1dHRvbkVsZW1lbnQiLCJkaXNhYmxlZCIsImFkZCIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiaW5wdXRMaXN0Iiwic29tZSIsInZhbGlkaXR5IiwidmFsaWQiLCJoYXNJbnZhbGlkSW5wdXQiLCJyZW5kZXJMb2FkaW5nIiwiaXNMb2FkaW5nIiwiYnRuIiwiZGVmYXVsdFRleHQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJsb2FkaW5nVGV4dCIsImhhbmRsZVN1Ym1pdCIsInJlcXVlc3QiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsInN1Ym1pdEJ0biIsInN1Ym1pdHRlciIsImluaXRpYWxUZXh0IiwidGhlbiIsInRhcmdldCIsInJlc2V0IiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJmaW5hbGx5Iiwic2VsZWN0ZWRDYXJkIiwic2VsZWN0ZWRDYXJkSWQiLCJhcGkiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJiYXNlVXJsIiwiaGVhZGVycyIsInRoaXMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZ2V0QXBwSW5mbyIsIlByb21pc2UiLCJhbGwiLCJnZXRJbml0aWFsQ2FyZHMiLCJnZXRVc2VySW5mbyIsImNoZWNrUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJyZWplY3QiLCJzdGF0dXMiLCJ1cmwiLCJvcHRpb25zIiwiZmV0Y2giLCJlZGl0VXNlckluZm8iLCJfcmVmMiIsIm5hbWUiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZWRpdEF2YXRhckluZm8iLCJhdmF0YXIiLCJhZGRDYXJkIiwiX3JlZjMiLCJsaW5rIiwiZGVsZXRlQ2FyZCIsImNoYW5nZUxpa2VTdGF0dXMiLCJpc0xpa2VkIiwiYXV0aG9yaXphdGlvbiIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsb3NlQnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlZGl0UHJvZmlsZUJ1dHRvbiIsInByb2ZpbGVJbWFnZSIsInByb2ZpbGVOYW1lIiwicHJvZmlsZURlc2NyaXB0aW9uIiwiY2FyZE1vZGFsQnV0dG9uIiwiYXZhdGFyTW9kYWxCdXR0b24iLCJlZGl0UHJvZmlsZU1vZGFsIiwiZWRpdFByb2ZpbGVGb3JtIiwibmFtZUlucHV0IiwiZGVzY3JpcHRpb25JbnB1dCIsImNhcmRNb2RhbCIsImNhcmRNb2RhbEZvcm0iLCJjYXJkU3VibWl0QnV0dG9uIiwiaW1hZ2VJbnB1dCIsInRpdGxlSW5wdXQiLCJhdmF0YXJNb2RhbCIsImF2YXRhck1vZGFsRm9ybSIsImF2YXRhcklucHV0IiwiYXZhdGFyU3VibWl0QnV0dG9uIiwiZGVsZXRlTW9kYWwiLCJkZWxldGVGb3JtIiwiZGVsZXRlQ2FuY2VsQnV0dG9uIiwiY2FyZFRlbXBsYXRlIiwiY29udGVudCIsImNhcmRzTGlzdCIsInByZXZpZXdNb2RhbCIsInByZXZpZXdNb2RhbEltYWdlRWxlbWVudCIsInByZXZpZXdNb2RhbENhcHRpb25FbGVtZW50IiwiY2xvc2VNb2RhbE92ZXJsYXkiLCJjdXJyZW50VGFyZ2V0IiwiY2xvc2VNb2RhbCIsImNsb3NlTW9kYWxFc2MiLCJrZXkiLCJvcGVuTW9kYWwiLCJtb2RhbCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJyZW5kZXJDYXJkIiwiaXRlbSIsImNhcmRFbGVtZW50IiwiZGF0YSIsImNsb25lTm9kZSIsImNhcmROYW1lRWxlbWVudCIsImNhcmRJbWFnZUVsZW1lbnQiLCJjYXJkTGlrZUJ1dHRvbiIsImNhcmRCaW5CdXR0b24iLCJzcmMiLCJhbHQiLCJjb250YWlucyIsInRvZ2dsZSIsImhhbmRsZUxpa2UiLCJfaWQiLCJjYXJkSWQiLCJoYW5kbGVEZWxldGVDYXJkIiwiaGFuZGxlSW1hZ2VDbGljayIsImdldENhcmRFbGVtZW50IiwiY2FyZHMiLCJ1c2VycyIsInJldmVyc2UiLCJmb3JFYWNoIiwiY2FyZCIsImJ1dHRvbiIsImNsb3Nlc3QiLCJ2YWx1ZSIsImF2YXRhckRhdGEiLCJyZXNldFZhbGlkYXRpb24iLCJpbnB1dCIsInVzZXJEYXRhIiwiY2FyZERhdGEiLCJzZXRFdmVudExpc3RlbmVycyIsIkFycmF5IiwiZnJvbSIsImxvZyIsImNoZWNrSW5wdXRWYWxpZGl0eSIsInNob3dJbnB1dEVycm9yIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9