!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}let s,i;const l=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"e406c5d0-c926-42e6-85c9-73e707970c80","Content-Type":"application/json"}});function c(e){e.target===e.currentTarget&&m(e.currentTarget)}function d(e){"Escape"===e.key&&m(document.querySelector(".modal_opened"))}function u(e){e.classList.add("modal_opened"),document.addEventListener("keydown",d),e.addEventListener("mousedown",c)}function m(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",d),e.removeEventListener("mousedown",c))}function h(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked&&o.classList.add("card__like-btn_liked"),o.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");l.changeLikeStatus(t,n).then((()=>{r.classList.toggle("card__like-btn_liked",!n)})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){s=e,i=t,u(x)}(t,e._id))),n.addEventListener("click",(()=>function(e){previewModalImageElement.src=e.link,previewModalImageElement.alt=e.name,previewModalCaptionElement.textContent=e.name,u(previewModal)}(e))),t}(e);p[t](r)}const _=document.querySelector(".profile__avatar"),v=document.querySelector(".profile__name"),f=document.querySelector(".profile__description"),p=document.querySelector(".cards__list");l.getAppInfo().then((e=>{let[t,r]=e;0===t.length?p.innerHTML="<p>No cards to display.</p>":(t.reverse(),t.forEach((e=>{h(e)}))),_.src=r.avatar,v.textContent=r.name,f.textContent=r.about})).catch(console.error),document.querySelectorAll(".modal__close-btn").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>m(t)))}));const y=document.querySelector(".profile__avatar-btn"),S=document.querySelector("#avatar-modal"),b=S.querySelector("#edit-avatar-form");y.addEventListener("click",(()=>u(S))),b.addEventListener("submit",(function(t){t.preventDefault(),a((function(){return l.editAvatarInfo(avatarInput.value).then((t=>{_.src=t.avatar,r(avatarSubmitButton,e),m(S)}))}),t)}));const q=document.querySelector(".profile__edit-btn"),E=document.querySelector("#edit-modal"),g=E.querySelector("#edit-profile-form"),L=E.querySelector("#profile-name-input"),k=E.querySelector("#profile-description-input");q.addEventListener("click",(()=>{var r,n;L.value=v.textContent,k.value=f.textContent,r=g,n=e,[L,k].forEach((e=>{t(r,e,n)})),u(E)})),g.addEventListener("submit",(function(e){e.preventDefault(),a((function(){return l.editUserInfo({name:L.value,about:k.value}).then((e=>{v.textContent=e.name,f.textContent=e.about,m(E)}))}),e)}));const C=document.querySelector(".profile__add-btn"),I=document.querySelector("#card-modal"),U=I.querySelector("#card-form");C.addEventListener("click",(()=>u(I))),U.addEventListener("submit",(function(t){t.preventDefault(),a((function(){return l.addCard({name:titleInput.value,link:imageInput.value}).then((t=>{h(t),r(cardSubmitButton,e),m(I)}))}),t)}));const x=document.querySelector("#delete-modal"),$=x.querySelector(".modal__form"),A=x.querySelector(".modal__submit-btn_type_cancel");var T;$.addEventListener("submit",(function(e){e.preventDefault(),a((function(){return l.deleteCard(i).then((()=>{s.remove(),m(x)}))}),e,"Deleting...")})),A.addEventListener("click",(()=>m(x))),T=e,document.querySelectorAll(T.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,T)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,