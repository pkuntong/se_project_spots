!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}let i,c;const l=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}_request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r={headers:this._headers,...t},n=`${this._baseUrl}${e}`;return fetch(n,r).then(this._checkResponse)}getInitialCards(){return this._request("/cards")}getUserInfo(){return this._request("/users/me")}editUserInfo(e){let{name:t,about:r}=e;return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this._request("/cards",{method:"POST",body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE"})}changeLikeStatus(e,t){return this._request(`/cards/${e}/likes`,{method:t?"DELETE":"PUT"})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9761a594-3fe1-46bc-8b2b-b1c551adb983","Content-Type":"application/json"}});l.getAppInfo().then((e=>{let[t,r]=e;t.reverse(),t.forEach((e=>{J(e)})),u.src=r.avatar,m.textContent=r.name,_.textContent=r.about})).catch(console.error);const s=document.querySelectorAll(".modal__close-btn"),d=document.querySelector(".profile__edit-btn"),u=document.querySelector(".profile__avatar"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),v=document.querySelector(".profile__add-btn"),f=document.querySelector(".profile__avatar-btn"),h=document.querySelector("#edit-modal"),y=h.querySelector("#edit-profile-form"),S=h.querySelector("#profile-name-input"),p=h.querySelector("#profile-description-input"),b=document.querySelector("#card-modal"),q=b.querySelector("#card-form"),g=b.querySelector(".modal__submit-btn"),k=b.querySelector("#card-link-input"),E=b.querySelector("#card-caption-input"),L=document.forms["edit-avatar-form"],C=L.avatar,x=L.querySelector(".modal__submit-btn"),A=document.querySelector("#delete-modal"),I=A.querySelector(".modal__form"),T=A.querySelector(".modal__submit-btn_type_cancel"),U=document.querySelector("#card-template").content,$=document.querySelector(".cards__list"),w=document.querySelector("#preview-modal"),P=document.querySelector(".modal__image"),B=document.querySelector(".modal__caption");function D(e){e.target===e.currentTarget&&j(e.currentTarget)}function N(e){"Escape"===e.key&&j(document.querySelector(".modal_opened"))}function O(e){e.classList.add("modal_opened"),document.addEventListener("keydown",N),e.addEventListener("mousedown",D)}function j(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",N),e.removeEventListener("mousedown",D))}function J(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=U.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return e.isLiked&&o.classList.add("card__like-btn_liked"),n.src=e.link,n.alt=e.alt,r.textContent=e.name,o.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");l.changeLikeStatus(t,n).then((e=>{e?(e=!0,r.classList.toggle("card__like-btn_liked")):(e=!1,r.classList.toggle("card__like-btn_liked"))})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){i=e,c=t,O(A)}(t,e._id))),n.addEventListener("click",(()=>function(e){P.src=e.link,P.alt=e.name,B.textContent=e.name,O(w)}(e))),t}(e);$[t](r)}var M;s.forEach((e=>{e.addEventListener("click",(e=>{j(e.target.closest(".modal"))}))})),f.addEventListener("click",(()=>{O(avatarModal)})),L.addEventListener("submit",(function(t){a((function(){return l.editAvatarInfo(C.value).then((t=>{u.src=t.avatar,r(x,e),j(avatarModal)}))}),t)})),d.addEventListener("click",(()=>{var r,n;S.value=m.textContent,p.value=_.textContent,r=y,n=e,[S,p].forEach((e=>{t(r,e,n)})),O(h)})),y.addEventListener("submit",(function(e){a((function(){return l.editUserInfo({name:S.value,about:p.value}).then((e=>{m.textContent=e.name,_.textContent=e.about,j(h)}))}),e)})),v.addEventListener("click",(()=>{O(b)})),q.addEventListener("submit",(function(t){a((function(){return l.addCard({name:E.value,link:k.value}).then((t=>{J(t),r(g,e),j(b)}))}),t)})),I.addEventListener("submit",(function(e){a((function(){return l.deleteCard(c).then((()=>{i.remove(),j(A)}))}),e,"Deleting...")})),T.addEventListener("click",(()=>{j(A)})),M=e,document.querySelectorAll(M.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((i=>{i.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,i,r),n(o,a,r)}))}))})(e,M)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,