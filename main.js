!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}const s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8821c207-7c9b-4450-ae25-85456081faad","Content-Type":"application/json"}});function i(e){e.target===e.currentTarget&&c(e.currentTarget)}function d(e){"Escape"===e.key&&c(document.querySelector(".modal_opened"))}function l(e){e.classList.add("modal_opened"),document.addEventListener("keydown",d),e.addEventListener("mousedown",i)}function c(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",d),e.removeEventListener("mousedown",i))}function u(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=cardTemplate.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked&&o.classList.add("card__like-btn_liked"),o.addEventListener("click",(t=>handleLike(t,e._id))),a.addEventListener("click",(()=>handleDeleteCard(t,e._id))),n.addEventListener("click",(()=>handleImageClick(e))),t}(e);r&&cardsList[t](r)}function m(t){t.preventDefault(),a((function(){return s.editAvatarInfo(avatarInput.value).then((t=>{profileImage.src=t.avatar,r(avatarSubmitButton,e),c(avatarModal)}))}),t)}function h(e){e.preventDefault(),a((function(){return s.editUserInfo({name:nameInput.value,about:descriptionInput.value}).then((e=>{profileName.textContent=e.name,profileDescription.textContent=e.about,c(editProfileModal)}))}),e)}function v(t){t.preventDefault(),a((function(){return s.addCard({name:titleInput.value,link:imageInput.value}).then((t=>{u(t),r(cardSubmitButton,e),c(cardModal)}))}),t)}function _(e){e.preventDefault(),a((function(){return s.deleteCard(void 0).then((()=>{(void 0).remove(),c(deleteModal)}))}),e,"Deleting...")}document.addEventListener("DOMContentLoaded",(()=>{const r=document.querySelectorAll(".modal__close-btn"),o=document.querySelector("#card-template")?.content,a=document.querySelector(".cards__list");if(console.log("Card template:",o),!o)return void console.error("Error: Card template not found.");const i=document.querySelector(".profile__avatar"),d=document.querySelector(".profile__name"),f=document.querySelector(".profile__description");s.getAppInfo().then((e=>{let[t,r]=e;console.log("Fetched cards:",t),0===t.length?(console.log("No cards available"),a.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{u(e)}))),i.src=r.avatar,d.textContent=r.name,f.textContent=r.about})).catch(console.error),r.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>c(t)))}));const p=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#avatar-modal"),S=y.querySelector("#edit-avatar-form");p.addEventListener("click",(()=>l(y))),S.addEventListener("submit",m);const b=document.querySelector(".profile__edit-btn"),q=document.querySelector("#edit-modal"),E=q.querySelector("#edit-profile-form"),L=q.querySelector("#profile-name-input"),g=q.querySelector("#profile-description-input");b.addEventListener("click",(()=>{var r,n;L.value=d.textContent,g.value=f.textContent,r=E,n=e,[L,g].forEach((e=>{t(r,e,n)})),l(q)})),E.addEventListener("submit",h);const C=document.querySelector(".profile__add-btn"),k=document.querySelector("#card-modal"),I=k.querySelector("#card-form");C.addEventListener("click",(()=>l(k))),I.addEventListener("submit",v);const U=document.querySelector("#delete-modal"),$=U.querySelector(".modal__form"),x=U.querySelector(".modal__submit-btn_type_cancel");var D;$.addEventListener("submit",_),x.addEventListener("click",(()=>c(U))),D=e,document.querySelectorAll(D.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,D)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SixFQUFxQnRCLEVBQVkvSCxjQUFjLGtDRnBJcEJELE1FcUlqQ3FKLEVBQVdoRSxpQkFBaUIsU0FBVXdDLEdBQ3RDeUIsRUFBbUJqRSxpQkFBaUIsU0FBUyxJQUFNTixFQUFXaUQsS0Z0STdCaEksRUV5SWhCVixFRnhJRTRGLFNBQVNnRCxpQkFBaUJsSSxFQUFPVCxjQUN6Q2tKLFNBQVMzSSxJQXJCTXlKLEVBQUN6SixFQUFhRSxLQUN0QyxNQUFNVyxFQUFZNkksTUFBTUMsS0FDdEIzSixFQUFZb0ksaUJBQWlCbEksRUFBT1IsZ0JBRWhDZSxFQUFnQlQsRUFBWUcsY0FBY0QsRUFBT1Asc0JBRXZEMEMsUUFBUWlHLElBQUl6SCxHQUNad0IsUUFBUWlHLElBQUk3SCxHQUVaRyxFQUFrQkMsRUFBV0osRUFBZVAsR0FFNUNXLEVBQVU4SCxTQUFTMUksSUFDakJBLEVBQWFzRixpQkFBaUIsU0FBUyxXQW5EaEJxRSxFQUFDNUosRUFBYUMsRUFBY0MsS0FDaERELEVBQWFjLFNBQVNDLE1BUXpCakIsRUFBZUMsRUFBYUMsRUFBY0MsR0FyQnZCMkosRUFBQzdKLEVBQWFDLEVBQWM2SixFQUFjNUosS0FDL0QsTUFBTTZKLEVBQWUvSixFQUFZRyxjQUFjLElBQUlGLEVBQWFHLFlBQ2hFSCxFQUFhSyxVQUFVSyxJQUFJVCxFQUFPTCxpQkFDbENrSyxFQUFhMUosWUFBY3lKLENBQVksRUFXckNELENBQ0U3SixFQUNBQyxFQUNBQSxFQUFhK0osa0JBQ2I5SixFQUlKLEVBMENJMEosQ0FBbUI1SixFQUFhQyxFQUFjQyxHQUM5Q1UsRUFBa0JDLEVBQVdKLEVBQWVQLEVBQzlDLEdBQUUsR0FDRixFQU1BdUosQ0FBa0J6SixFQUFhRSxFQUFPLEdFc0loQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9zY3JpcHRzL3ZhbGlkYXRpb24uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9oZWxwZXJzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9BcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xuICAgIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3N1Ym1pdC1idG5cIixcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19zdWJtaXQtYnRuX2luYWN0aXZlXCIsXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gICAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JcIixcbiAgfTtcbiAgXG4gIGNvbnN0IHNob3dJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSwgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgfTtcbiAgXG4gIGNvbnN0IGhpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICB9O1xuICBcbiAgY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICBzaG93SW5wdXRFcnJvcihcbiAgICAgICAgZm9ybUVsZW1lbnQsXG4gICAgICAgIGlucHV0RWxlbWVudCxcbiAgICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlLFxuICAgICAgICBjb25maWdcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZyk7XG4gICAgfVxuICB9O1xuICBcbiAgY29uc3QgaGFzSW52YWxpZElucHV0ID0gKGlucHV0TGlzdCkgPT4ge1xuICAgIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfTtcbiAgXG4gIGV4cG9ydCBjb25zdCBkaXNhYmxlQnV0dG9uID0gKGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH07XG4gIFxuICBjb25zdCB0b2dnbGVCdXR0b25TdGF0ZSA9IChpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICAgIGlmIChoYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgZGlzYWJsZUJ1dHRvbihidXR0b25FbGVtZW50LCBjb25maWcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH1cbiAgfTtcbiAgXG4gIGV4cG9ydCBjb25zdCByZXNldFZhbGlkYXRpb24gPSAoZm9ybUVsZW1lbnQsIGlucHV0TGlzdCwgY29uZmlnKSA9PiB7XG4gICAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXQsIGNvbmZpZyk7XG4gICAgfSk7XG4gIH07XG4gIFxuICBjb25zdCBzZXRFdmVudExpc3RlbmVycyA9IChmb3JtRWxlbWVudCwgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcihjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICBcbiAgICBjb25zb2xlLmxvZyhpbnB1dExpc3QpO1xuICAgIGNvbnNvbGUubG9nKGJ1dHRvbkVsZW1lbnQpO1xuICBcbiAgICB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZyk7XG4gIFxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgY29uZmlnKTtcbiAgICAgICAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIFxuICBleHBvcnQgY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgICBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3Rvcik7XG4gICAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICAgIHNldEV2ZW50TGlzdGVuZXJzKGZvcm1FbGVtZW50LCBjb25maWcpO1xuICAgIH0pO1xuICB9O1xuICAiLCJleHBvcnQgZnVuY3Rpb24gcmVuZGVyTG9hZGluZyhcbiAgICBpc0xvYWRpbmcsXG4gICAgYnRuLFxuICAgIGRlZmF1bHRUZXh0ID0gXCJTYXZlXCIsXG4gICAgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiXG4gICkge1xuICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICBidG4udGV4dENvbnRlbnQgPSBkZWZhdWx0VGV4dDtcbiAgICB9XG4gIH1cbiAgXG4gIGV4cG9ydCBmdW5jdGlvbiBoYW5kbGVTdWJtaXQocmVxdWVzdCwgZXZ0LCBsb2FkaW5nVGV4dCA9IFwiU2F2aW5nLi4uXCIpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgXG4gICAgY29uc3Qgc3VibWl0QnRuID0gZXZ0LnN1Ym1pdHRlcjtcbiAgICBjb25zdCBpbml0aWFsVGV4dCA9IHN1Ym1pdEJ0bi50ZXh0Q29udGVudDtcbiAgXG4gICAgcmVuZGVyTG9hZGluZyh0cnVlLCBzdWJtaXRCdG4sIGluaXRpYWxUZXh0LCBsb2FkaW5nVGV4dCk7XG4gIFxuICAgIHJlcXVlc3QoKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIHJlbmRlckxvYWRpbmcoZmFsc2UsIHN1Ym1pdEJ0biwgaW5pdGlhbFRleHQpO1xuICAgICAgfSk7XG4gIH1cbiAgIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCB7XG4gIGVuYWJsZVZhbGlkYXRpb24sXG4gIHNldHRpbmdzLFxuICByZXNldFZhbGlkYXRpb24sXG4gIGRpc2FibGVCdXR0b24sXG59IGZyb20gXCIuLi9zY3JpcHRzL3ZhbGlkYXRpb24uanNcIjtcbmltcG9ydCB7IGhhbmRsZVN1Ym1pdCB9IGZyb20gXCIuLi91dGlscy9oZWxwZXJzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcblxubGV0IHNlbGVjdGVkQ2FyZCwgc2VsZWN0ZWRDYXJkSWQ7XG5cbi8vIEFQSSBzZXR1cFxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiODgyMWMyMDctN2M5Yi00NDUwLWFlMjUtODU0NTYwODFmYWFkXCIsIC8vIEVuc3VyZSB0aGlzIGlzIGEgdmFsaWQgdG9rZW5cbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSxcbn0pO1xuXG4vLyBGdW5jdGlvbnMgdG8gaGFuZGxlIG1vZGFsc1xuZnVuY3Rpb24gY2xvc2VNb2RhbE92ZXJsYXkoZXZ0KSB7XG4gIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkge1xuICAgIGNsb3NlTW9kYWwoZXZ0LmN1cnJlbnRUYXJnZXQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsb3NlTW9kYWxFc2MoZXZ0KSB7XG4gIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgY29uc3QgbW9kYWxPcGVuZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX29wZW5lZFwiKTtcbiAgICBjbG9zZU1vZGFsKG1vZGFsT3BlbmVkKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBvcGVuTW9kYWwobW9kYWwpIHtcbiAgbW9kYWwuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VNb2RhbEVzYyk7XG4gIG1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgY2xvc2VNb2RhbE92ZXJsYXkpO1xufVxuXG5mdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XG4gIGlmIChtb2RhbCkge1xuICAgIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VNb2RhbEVzYyk7XG4gICAgbW9kYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBjbG9zZU1vZGFsT3ZlcmxheSk7XG4gIH1cbn1cblxuLy8gRnVuY3Rpb24gdG8gcmVuZGVyIGEgY2FyZFxuZnVuY3Rpb24gcmVuZGVyQ2FyZChpdGVtLCBtZXRob2QgPSBcInByZXBlbmRcIikge1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGdldENhcmRFbGVtZW50KGl0ZW0pO1xuICBpZiAoY2FyZEVsZW1lbnQpIHtcbiAgICBjYXJkc0xpc3RbbWV0aG9kXShjYXJkRWxlbWVudCk7IC8vIEFwcGVuZCB0aGUgY2FyZCB0byB0aGUgY2FyZHMgbGlzdFxuICB9XG59XG5cbi8vIENyZWF0ZSBhIGNhcmQgZWxlbWVudCBmcm9tIHRoZSB0ZW1wbGF0ZVxuZnVuY3Rpb24gZ2V0Q2FyZEVsZW1lbnQoZGF0YSkge1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xuICBjb25zdCBjYXJkTmFtZUVsZW1lbnQgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xuICBjb25zdCBjYXJkSW1hZ2VFbGVtZW50ID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgY29uc3QgY2FyZExpa2VCdXR0b24gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnRuXCIpO1xuICBjb25zdCBjYXJkRGVsZXRlQnV0dG9uID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnRuXCIpO1xuXG4gIGNhcmROYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgY2FyZEltYWdlRWxlbWVudC5zcmMgPSBkYXRhLmxpbms7XG4gIGNhcmRJbWFnZUVsZW1lbnQuYWx0ID0gZGF0YS5uYW1lO1xuXG4gIGlmIChkYXRhLmlzTGlrZWQpIHtcbiAgICBjYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idG5fbGlrZWRcIik7XG4gIH1cblxuICBjYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4gaGFuZGxlTGlrZShldnQsIGRhdGEuX2lkKSk7XG4gIGNhcmREZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGhhbmRsZURlbGV0ZUNhcmQoY2FyZEVsZW1lbnQsIGRhdGEuX2lkKSk7XG4gIGNhcmRJbWFnZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGhhbmRsZUltYWdlQ2xpY2soZGF0YSkpO1xuXG4gIHJldHVybiBjYXJkRWxlbWVudDsgLy8gUmV0dXJuIHRoZSBjcmVhdGVkIGNhcmQgZWxlbWVudFxufVxuXG4vLyBEZWZpbmUgdGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBhdmF0YXIgc3VibWlzc2lvblxuZnVuY3Rpb24gaGFuZGxlQXZhdGFyU3VibWl0KGV2dCkge1xuICBldnQucHJldmVudERlZmF1bHQoKTsgLy8gUHJldmVudCB0aGUgZGVmYXVsdCBmb3JtIHN1Ym1pc3Npb24gYmVoYXZpb3JcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgcmV0dXJuIGFwaS5lZGl0QXZhdGFySW5mbyhhdmF0YXJJbnB1dC52YWx1ZSkudGhlbigoYXZhdGFyRGF0YSkgPT4ge1xuICAgICAgcHJvZmlsZUltYWdlLnNyYyA9IGF2YXRhckRhdGEuYXZhdGFyOyAvLyBVcGRhdGUgdGhlIHByb2ZpbGUgaW1hZ2VcbiAgICAgIGRpc2FibGVCdXR0b24oYXZhdGFyU3VibWl0QnV0dG9uLCBzZXR0aW5ncyk7IC8vIERpc2FibGUgYnV0dG9uIGlmIG5lZWRlZFxuICAgICAgY2xvc2VNb2RhbChhdmF0YXJNb2RhbCk7IC8vIENsb3NlIHRoZSBtb2RhbCBhZnRlciBzdWJtaXNzaW9uXG4gICAgfSk7XG4gIH1cbiAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBldnQpOyAvLyBDYWxsIHlvdXIgZXhpc3RpbmcgaGFuZGxlU3VibWl0IGZ1bmN0aW9uXG59XG5cbi8vIERlZmluZSB0aGUgZnVuY3Rpb24gdG8gaGFuZGxlIHByb2ZpbGUgc3VibWlzc2lvblxuZnVuY3Rpb24gaGFuZGxlRWRpdFByb2ZpbGVTdWJtaXQoZXZ0KSB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGZvcm0gc3VibWlzc2lvbiBiZWhhdmlvclxuICBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcbiAgICByZXR1cm4gYXBpLmVkaXRVc2VySW5mbyh7XG4gICAgICBuYW1lOiBuYW1lSW5wdXQudmFsdWUsXG4gICAgICBhYm91dDogZGVzY3JpcHRpb25JbnB1dC52YWx1ZSxcbiAgICB9KS50aGVuKCh1c2VyRGF0YSkgPT4ge1xuICAgICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VyRGF0YS5uYW1lOyAvLyBVcGRhdGUgcHJvZmlsZSBuYW1lXG4gICAgICBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB1c2VyRGF0YS5hYm91dDsgLy8gVXBkYXRlIHByb2ZpbGUgZGVzY3JpcHRpb25cbiAgICAgIGNsb3NlTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7IC8vIENsb3NlIHRoZSBtb2RhbCBhZnRlciBzdWJtaXNzaW9uXG4gICAgfSk7XG4gIH1cbiAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBldnQpOyAvLyBDYWxsIHlvdXIgZXhpc3RpbmcgaGFuZGxlU3VibWl0IGZ1bmN0aW9uXG59XG5cbi8vIERlZmluZSB0aGUgZnVuY3Rpb24gdG8gaGFuZGxlIGFkZGluZyBhIG5ldyBjYXJkXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkU3VibWl0KGV2dCkge1xuICBldnQucHJldmVudERlZmF1bHQoKTsgLy8gUHJldmVudCB0aGUgZGVmYXVsdCBmb3JtIHN1Ym1pc3Npb24gYmVoYXZpb3JcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgcmV0dXJuIGFwaS5hZGRDYXJkKHtcbiAgICAgIG5hbWU6IHRpdGxlSW5wdXQudmFsdWUsXG4gICAgICBsaW5rOiBpbWFnZUlucHV0LnZhbHVlLFxuICAgIH0pLnRoZW4oKGNhcmREYXRhKSA9PiB7XG4gICAgICByZW5kZXJDYXJkKGNhcmREYXRhKTsgLy8gUmVuZGVyIHRoZSBuZXcgY2FyZFxuICAgICAgZGlzYWJsZUJ1dHRvbihjYXJkU3VibWl0QnV0dG9uLCBzZXR0aW5ncyk7IC8vIERpc2FibGUgYnV0dG9uIGlmIG5lZWRlZFxuICAgICAgY2xvc2VNb2RhbChjYXJkTW9kYWwpOyAvLyBDbG9zZSB0aGUgbW9kYWwgYWZ0ZXIgc3VibWlzc2lvblxuICAgIH0pO1xuICB9XG4gIGhhbmRsZVN1Ym1pdChtYWtlUmVxdWVzdCwgZXZ0KTsgLy8gQ2FsbCB5b3VyIGV4aXN0aW5nIGhhbmRsZVN1Ym1pdCBmdW5jdGlvblxufVxuXG4vLyBEZWZpbmUgdGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBkZWxldGluZyBhIGNhcmRcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmRTdWJtaXQoZXZ0KSB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGZvcm0gc3VibWlzc2lvbiBiZWhhdmlvclxuICBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcbiAgICByZXR1cm4gYXBpLmRlbGV0ZUNhcmQoc2VsZWN0ZWRDYXJkSWQpLnRoZW4oKCkgPT4ge1xuICAgICAgc2VsZWN0ZWRDYXJkLnJlbW92ZSgpOyAvLyBSZW1vdmUgdGhlIGNhcmQgZnJvbSB0aGUgRE9NXG4gICAgICBjbG9zZU1vZGFsKGRlbGV0ZU1vZGFsKTsgLy8gQ2xvc2UgdGhlIGRlbGV0ZSBtb2RhbFxuICAgIH0pO1xuICB9XG4gIGhhbmRsZVN1Ym1pdChtYWtlUmVxdWVzdCwgZXZ0LCBcIkRlbGV0aW5nLi4uXCIpOyAvLyBDYWxsIHlvdXIgZXhpc3RpbmcgaGFuZGxlU3VibWl0IGZ1bmN0aW9uXG59XG5cbi8vIERPTSBSZWFkeVxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBjb25zdCBjbG9zZUJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19jbG9zZS1idG5cIik7XG4gIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKT8uY29udGVudDsgLy8gQWNjZXNzIHRlbXBsYXRlIGhlcmVcbiAgY29uc3QgY2FyZHNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcblxuICAvLyBMb2cgdGhlIGNhcmQgdGVtcGxhdGUgdG8gY2hlY2sgaWYgaXQncyBmb3VuZFxuICBjb25zb2xlLmxvZyhcIkNhcmQgdGVtcGxhdGU6XCIsIGNhcmRUZW1wbGF0ZSk7IFxuXG4gIC8vIEVuc3VyZSB0aGUgY2FyZFRlbXBsYXRlIGV4aXN0cyBiZWZvcmUgcHJvY2VlZGluZ1xuICBpZiAoIWNhcmRUZW1wbGF0ZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvcjogQ2FyZCB0ZW1wbGF0ZSBub3QgZm91bmQuXCIpO1xuICAgIHJldHVybjsgLy8gU3RvcCBleGVjdXRpb24gaWYgdGVtcGxhdGUgaXMgbm90IGZvdW5kXG4gIH1cblxuICAvLyBQcm9maWxlIGVsZW1lbnRzXG4gIGNvbnN0IHByb2ZpbGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xuICBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbiAgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcblxuICAvLyBGZXRjaCB1c2VyIGluZm8gYW5kIGNhcmRzIHdoZW4gdGhlIERPTSBpcyBsb2FkZWRcbiAgYXBpLmdldEFwcEluZm8oKS50aGVuKChbY2FyZHMsIHVzZXJzXSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiRmV0Y2hlZCBjYXJkczpcIiwgY2FyZHMpOyAvLyBMb2cgZmV0Y2hlZCBjYXJkc1xuXG4gICAgaWYgKGNhcmRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS5sb2coXCJObyBjYXJkcyBhdmFpbGFibGVcIik7XG4gICAgICBjYXJkc0xpc3QuaW5uZXJIVE1MID0gXCI8cD5ObyBjYXJkcyB0byBkaXNwbGF5LjwvcD5cIjsgLy8gRGlzcGxheSBtZXNzYWdlIGlmIG5vIGNhcmRzXG4gICAgfSBlbHNlIHtcbiAgICAgIGNhcmRzLnJldmVyc2UoKTtcbiAgICAgIGNhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcbiAgICAgICAgcmVuZGVyQ2FyZChjYXJkKTsgLy8gUmVuZGVyIGVhY2ggY2FyZFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gU2V0IHVzZXIgcHJvZmlsZSBpbmZvXG4gICAgcHJvZmlsZUltYWdlLnNyYyA9IHVzZXJzLmF2YXRhcjtcbiAgICBwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IHVzZXJzLm5hbWU7XG4gICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlcnMuYWJvdXQ7XG4gIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuXG4gIC8vIENsb3NlIGJ1dHRvbiBldmVudCBsaXN0ZW5lcnNcbiAgY2xvc2VCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgIGNvbnN0IG1vZGFsID0gYnV0dG9uLmNsb3Nlc3QoXCIubW9kYWxcIik7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjbG9zZU1vZGFsKG1vZGFsKSk7XG4gIH0pO1xuXG4gIC8vIFNldHVwIGV2ZW50IGxpc3RlbmVycyBmb3IgbW9kYWxzIGFuZCBmb3JtIHN1Ym1pc3Npb25zXG4gIGNvbnN0IGF2YXRhck1vZGFsQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItYnRuXCIpO1xuICBjb25zdCBhdmF0YXJNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLW1vZGFsXCIpO1xuICBjb25zdCBhdmF0YXJNb2RhbEZvcm0gPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtYXZhdGFyLWZvcm1cIik7XG4gIGF2YXRhck1vZGFsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBvcGVuTW9kYWwoYXZhdGFyTW9kYWwpKTtcbiAgYXZhdGFyTW9kYWxGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlQXZhdGFyU3VibWl0KTtcblxuICBjb25zdCBlZGl0UHJvZmlsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idG5cIik7XG4gIGNvbnN0IGVkaXRQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtbW9kYWxcIik7XG4gIGNvbnN0IGVkaXRQcm9maWxlRm9ybSA9IGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcIiNlZGl0LXByb2ZpbGUtZm9ybVwiKTtcbiAgY29uc3QgbmFtZUlucHV0ID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtbmFtZS1pbnB1dFwiKTtcbiAgY29uc3QgZGVzY3JpcHRpb25JbnB1dCA9IGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCIpO1xuICBlZGl0UHJvZmlsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIG5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xuICAgIGRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQ7XG4gICAgcmVzZXRWYWxpZGF0aW9uKGVkaXRQcm9maWxlRm9ybSwgW25hbWVJbnB1dCwgZGVzY3JpcHRpb25JbnB1dF0sIHNldHRpbmdzKTtcbiAgICBvcGVuTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gIH0pO1xuICBlZGl0UHJvZmlsZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVFZGl0UHJvZmlsZVN1Ym1pdCk7XG5cbiAgY29uc3QgY2FyZE1vZGFsQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnRuXCIpO1xuICBjb25zdCBjYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtbW9kYWxcIik7XG4gIGNvbnN0IGNhcmRNb2RhbEZvcm0gPSBjYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIiNjYXJkLWZvcm1cIik7XG4gIGNhcmRNb2RhbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gb3Blbk1vZGFsKGNhcmRNb2RhbCkpO1xuICBjYXJkTW9kYWxGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlQWRkQ2FyZFN1Ym1pdCk7IC8vIEVuc3VyZSB0aGlzIGZ1bmN0aW9uIGlzIGRlZmluZWRcblxuICBjb25zdCBkZWxldGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLW1vZGFsXCIpO1xuICBjb25zdCBkZWxldGVGb3JtID0gZGVsZXRlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbiAgY29uc3QgZGVsZXRlQ2FuY2VsQnV0dG9uID0gZGVsZXRlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc3VibWl0LWJ0bl90eXBlX2NhbmNlbFwiKTtcbiAgZGVsZXRlRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZURlbGV0ZUNhcmRTdWJtaXQpOyAvLyBFbnN1cmUgdGhpcyBmdW5jdGlvbiBpcyBkZWZpbmVkXG4gIGRlbGV0ZUNhbmNlbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2xvc2VNb2RhbChkZWxldGVNb2RhbCkpO1xuXG4gIC8vIEVuYWJsZSBmb3JtIHZhbGlkYXRpb25cbiAgZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XG59KTtcbiIsImNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cblxuICBnZXRBcHBJbmZvKCkge1xuICAgIHJldHVybiBQcm9taXNlLmFsbChbdGhpcy5nZXRJbml0aWFsQ2FyZHMoKSwgdGhpcy5nZXRVc2VySW5mbygpXSk7XG4gIH1cblxuICBjaGVja1Jlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIHJlcXVlc3QodXJsLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCwgb3B0aW9ucykudGhlbih0aGlzLmNoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYWJvdXQsXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGVkaXRBdmF0YXJJbmZvKGF2YXRhcikge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGFkZENhcmQoeyBuYW1lLCBsaW5rIH0pIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGxpbmssXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoaWQpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIGNoYW5nZUxpa2VTdGF0dXMoaWQsIGlzTGlrZWQpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBpc0xpa2VkID8gXCJERUxFVEVcIiA6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwaTtcbiJdLCJuYW1lcyI6WyJzZXR0aW5ncyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiaGlkZUlucHV0RXJyb3IiLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImNvbmZpZyIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiZGlzYWJsZUJ1dHRvbiIsImJ1dHRvbkVsZW1lbnQiLCJkaXNhYmxlZCIsImFkZCIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiaW5wdXRMaXN0Iiwic29tZSIsInZhbGlkaXR5IiwidmFsaWQiLCJoYXNJbnZhbGlkSW5wdXQiLCJyZW5kZXJMb2FkaW5nIiwiaXNMb2FkaW5nIiwiYnRuIiwiZGVmYXVsdFRleHQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJsb2FkaW5nVGV4dCIsImhhbmRsZVN1Ym1pdCIsInJlcXVlc3QiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsInN1Ym1pdEJ0biIsInN1Ym1pdHRlciIsImluaXRpYWxUZXh0IiwidGhlbiIsInRhcmdldCIsInJlc2V0IiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJmaW5hbGx5IiwiYXBpIiwiY29uc3RydWN0b3IiLCJfcmVmIiwiYmFzZVVybCIsImhlYWRlcnMiLCJ0aGlzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImdldEFwcEluZm8iLCJQcm9taXNlIiwiYWxsIiwiZ2V0SW5pdGlhbENhcmRzIiwiZ2V0VXNlckluZm8iLCJjaGVja1Jlc3BvbnNlIiwicmVzIiwib2siLCJqc29uIiwicmVqZWN0Iiwic3RhdHVzIiwidXJsIiwib3B0aW9ucyIsImZldGNoIiwiZWRpdFVzZXJJbmZvIiwiX3JlZjIiLCJuYW1lIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImVkaXRBdmF0YXJJbmZvIiwiYXZhdGFyIiwiYWRkQ2FyZCIsIl9yZWYzIiwibGluayIsImRlbGV0ZUNhcmQiLCJjaGFuZ2VMaWtlU3RhdHVzIiwiaXNMaWtlZCIsImF1dGhvcml6YXRpb24iLCJjbG9zZU1vZGFsT3ZlcmxheSIsImN1cnJlbnRUYXJnZXQiLCJjbG9zZU1vZGFsIiwiY2xvc2VNb2RhbEVzYyIsImtleSIsImRvY3VtZW50Iiwib3Blbk1vZGFsIiwibW9kYWwiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlbmRlckNhcmQiLCJpdGVtIiwiY2FyZEVsZW1lbnQiLCJkYXRhIiwiY2FyZFRlbXBsYXRlIiwiY2xvbmVOb2RlIiwiY2FyZE5hbWVFbGVtZW50IiwiY2FyZEltYWdlRWxlbWVudCIsImNhcmRMaWtlQnV0dG9uIiwiY2FyZERlbGV0ZUJ1dHRvbiIsInNyYyIsImFsdCIsImhhbmRsZUxpa2UiLCJfaWQiLCJoYW5kbGVEZWxldGVDYXJkIiwiaGFuZGxlSW1hZ2VDbGljayIsImdldENhcmRFbGVtZW50IiwiY2FyZHNMaXN0IiwiaGFuZGxlQXZhdGFyU3VibWl0IiwiYXZhdGFySW5wdXQiLCJ2YWx1ZSIsImF2YXRhckRhdGEiLCJwcm9maWxlSW1hZ2UiLCJhdmF0YXJTdWJtaXRCdXR0b24iLCJhdmF0YXJNb2RhbCIsImhhbmRsZUVkaXRQcm9maWxlU3VibWl0IiwibmFtZUlucHV0IiwiZGVzY3JpcHRpb25JbnB1dCIsInVzZXJEYXRhIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlRGVzY3JpcHRpb24iLCJlZGl0UHJvZmlsZU1vZGFsIiwiaGFuZGxlQWRkQ2FyZFN1Ym1pdCIsInRpdGxlSW5wdXQiLCJpbWFnZUlucHV0IiwiY2FyZERhdGEiLCJjYXJkU3VibWl0QnV0dG9uIiwiY2FyZE1vZGFsIiwiaGFuZGxlRGVsZXRlQ2FyZFN1Ym1pdCIsInNlbGVjdGVkQ2FyZElkIiwic2VsZWN0ZWRDYXJkIiwiZGVsZXRlTW9kYWwiLCJjbG9zZUJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29udGVudCIsImxvZyIsImNhcmRzIiwidXNlcnMiLCJpbm5lckhUTUwiLCJyZXZlcnNlIiwiZm9yRWFjaCIsImNhcmQiLCJidXR0b24iLCJjbG9zZXN0IiwiYXZhdGFyTW9kYWxCdXR0b24iLCJhdmF0YXJNb2RhbEZvcm0iLCJlZGl0UHJvZmlsZUJ1dHRvbiIsImVkaXRQcm9maWxlRm9ybSIsInJlc2V0VmFsaWRhdGlvbiIsImlucHV0IiwiY2FyZE1vZGFsQnV0dG9uIiwiY2FyZE1vZGFsRm9ybSIsImRlbGV0ZUZvcm0iLCJkZWxldGVDYW5jZWxCdXR0b24iLCJzZXRFdmVudExpc3RlbmVycyIsIkFycmF5IiwiZnJvbSIsImNoZWNrSW5wdXRWYWxpZGl0eSIsInNob3dJbnB1dEVycm9yIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9