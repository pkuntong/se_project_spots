!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};let o,a;const s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"b3ddf623-2d0f-4e5a-a7b9-d7f30d2fad6e","Content-Type":"application/json"}});document.addEventListener("DOMContentLoaded",(()=>{const i=document.querySelector("#card-template").content,l=document.querySelector(".cards__list");if(console.log("Card template:",i),!i)return void console.error("Error: Card template not found.");const d=document.querySelector(".profile__edit-btn"),c=document.querySelector(".profile__avatar"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),_=document.querySelector(".profile__add-btn"),h=document.querySelector(".profile__avatar-btn"),v=document.querySelector("#edit-modal"),f=v.querySelector("#edit-profile-form"),p=v.querySelector("#profile-name-input"),y=v.querySelector("#profile-description-input"),S=document.querySelector("#card-modal"),b=S.querySelector("#card-form"),q=S.querySelector(".modal__submit-btn"),E=S.querySelector("#card-link-input"),L=S.querySelector("#card-caption-input"),k=document.querySelector("#avatar-modal"),C=k.querySelector("#edit-avatar-form"),g=k.querySelector("#profile-avatar-input"),U=k.querySelector(".modal__submit-btn"),$=document.querySelector("#delete-modal"),x=$.querySelector(".modal__form"),A=$.querySelector(".modal__submit-btn_type_cancel"),I=document.querySelector("#preview-modal"),T=I.querySelector(".modal__image"),D=I.querySelector(".modal__caption");var N;function P(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",O)}function B(e){e.classList.add("modal_opened"),document.addEventListener("keydown",O)}function O(e){"Escape"===e.key&&P(document.querySelector(".modal_opened"))}function w(e){const t=function(e){const t=i.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),l=t.querySelector(".card__like-btn"),d=t.querySelector(".card__delete-btn");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked&&l.classList.add("card__like-btn_liked"),l.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");s.changeLikeStatus(t,n).then((()=>{r.classList.toggle("card__like-btn_liked",!n)})).catch(console.error)}(t,e._id))),d.addEventListener("click",(()=>function(e,t){o=e,a=t,B($)}(t,e._id))),n.addEventListener("click",(()=>function(e){T.src=e.link,T.alt=e.name,D.textContent=e.name,B(I)}(e))),t}(e);l.prepend(t)}s.getAppInfo().then((e=>{let[t,r]=e;0===t.length?(console.log("No cards available"),l.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{w(e)}))),c.src=r.avatar,u.textContent=r.name,m.textContent=r.about})).catch(console.error),document.querySelectorAll(".modal__close-btn").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>P(t)))})),h?.addEventListener("click",(()=>B(k))),C?.addEventListener("submit",(function(t){t.preventDefault(),s.editAvatarInfo(g.value).then((t=>{c.src=t.avatar,r(U,e),P(k)}))})),d?.addEventListener("click",(()=>{var r,n;p.value=u.textContent,y.value=m.textContent,r=f,n=e,[p,y].forEach((e=>{t(r,e,n)})),B(v)})),f?.addEventListener("submit",(function(e){e.preventDefault(),s.editUserInfo({name:p.value,about:y.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,P(v)}))})),_?.addEventListener("click",(()=>B(S))),b?.addEventListener("submit",(function(t){t.preventDefault(),s.addCard({name:L.value,link:E.value}).then((t=>{w(t),r(q,e),P(S)}))})),x?.addEventListener("submit",(function(e){e.preventDefault(),s.deleteCard(a).then((()=>{o.remove(),P($)}))})),A?.addEventListener("click",(()=>P($))),N=e,document.querySelectorAll(N.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,N)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,