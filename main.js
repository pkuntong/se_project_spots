!function(){"use strict";const e=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?((e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)})(t,o):(t.disabled=!1,t.classList.remove(o.inactiveButtonClass))},t=new class{constructor(e){let{baseUrl:t,headers:o}=e;this._baseUrl=t,this._headers=o}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:o}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:o})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:o}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:o})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"58406471-2704-4b39-bb10-f7b7656fbc17","Content-Type":"application/json"}});t.getAppInfo().then((e=>{let[t,n]=e;t.forEach((e=>{const t=i(e);r.list.append(t)})),o.nameElement.textContent=n.name,o.jobElement.textContent=n.about,v.src=n.avatar})).catch((e=>console.error(e)));const o={editButton:document.querySelector(".profile__edit-button"),modal:document.querySelector("#edit-profile-modal"),closeButton:document.querySelector("#close-profile-modal"),form:document.querySelector("#edit-profile-form"),nameInput:document.querySelector("#edit-profile-input-name"),jobInput:document.querySelector("#edit-profile-input-description"),nameElement:document.querySelector(".profile__title"),jobElement:document.querySelector(".profile__description")},n={button:document.querySelector(".profile__add-button"),modal:document.querySelector("#new-post-modal"),closeButton:document.querySelector("#close-new-post-modal"),linkInput:document.querySelector("#new-post-image-link"),nameInput:document.querySelector("#new-post-input-description"),form:document.querySelector("#new-post-form")},r={template:document.querySelector("#card-template"),list:document.querySelector(".cards__list"),modal:document.querySelector("#preview-modal"),modalImage:document.querySelector(".modal__image"),modalCloseButton:document.querySelector(".modal__close-button"),modalCaption:document.querySelector(".modal__caption")};function a(e){e.classList.add("modal_opened"),document.addEventListener("keydown",s),e.addEventListener("click",c),e.addEventListener("click",d)}function l(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",s),e.removeEventListener("click",c),e.removeEventListener("click",d)}const s=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&l(e)}},c=e=>{e.target.classList.contains("modal")&&l(e.currentTarget)},d=e=>{e.target.classList.contains("modal__close-button")&&l(e.currentTarget)};function i(e){const o=r.template.content.querySelector(".card").cloneNode(!0),n=o.querySelector(".card__title"),l=o.querySelector(".card__image"),s=o.querySelector(".card__like-button"),c=o.querySelector(".card__delete-button"),d=e._id;return n.textContent=e.name,l.src=e.link,l.alt=e.name,e.isLiked&&s.classList.add("card__like-button_liked"),s.addEventListener("click",(()=>{s.classList.contains("card__like-button_liked")?t.deleteLike(d).then((()=>{s.classList.remove("card__like-button_liked")})).catch((e=>console.error(`Error: ${e}`))):t.addLike(d).then((()=>{s.classList.add("card__like-button_liked")})).catch((e=>console.error(`Error: ${e}`)))})),c.addEventListener("click",(()=>{q=o,E=d,a(y)})),l.addEventListener("click",(()=>{r.modalCaption.textContent=e.name,r.modalImage.src=e.link,r.modalImage.alt=e.name,a(r.modal)})),o}o.editButton.addEventListener("click",(()=>{o.nameInput.value=o.nameElement.textContent,o.jobInput.value=o.jobElement.textContent,a(o.modal)})),o.closeButton.addEventListener("click",(()=>{l(o.modal)})),n.button.addEventListener("click",(()=>{a(n.modal)})),n.closeButton.addEventListener("click",(()=>{l(n.modal)})),o.form.addEventListener("submit",(function(e){e.preventDefault();const n=o.form.querySelector(".modal__submit-button"),r=n.textContent;n.textContent="Saving...",t.editUserInfo({name:o.nameInput.value,about:o.jobInput.value}).then((e=>{o.nameElement.textContent=e.name,o.jobElement.textContent=e.about,l(o.modal)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{n.textContent=r}))})),n.form.addEventListener("submit",(function(e){e.preventDefault();const o=n.form.querySelector(".modal__submit-button"),a=o.textContent;o.textContent="Saving...",t.addNewCard({name:n.nameInput.value,link:n.linkInput.value}).then((e=>{const t=i(e);r.list.prepend(t),n.form.reset(),l(n.modal)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{o.textContent=a}))})),r.modalCloseButton.addEventListener("click",(()=>{l(r.modal)}));const u=document.querySelector("#edit-avatar-modal"),m=u.querySelector(".modal__form"),_=document.querySelector(".profile__avatar-button"),h=(u.querySelector(".modal__submit-button"),u.querySelector(".modal__close-button")),p=u.querySelector("#edit-avatar-input-link"),v=document.querySelector(".profile__avatar");_.addEventListener("click",(()=>{a(u)})),h.addEventListener("click",(()=>{l(u)})),m.addEventListener("submit",(e=>{e.preventDefault();const o=m.querySelector(".modal__submit-button"),n=o.textContent;o.textContent="Saving...";const r=p.value;t.editAvatar(r).then((e=>{v.src=e.avatar,l(u)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{o.textContent=n}))}));const y=document.querySelector("#delete-modal"),b=document.querySelector("#delete-modal-form"),f=document.querySelector(".modal__cancel-button"),S=document.querySelector("#close-delete-modal");let q,E;var k;b.addEventListener("submit",(e=>{e.preventDefault();const o=b.querySelector(".modal__submit-button"),n=o.textContent;o.textContent="Deleting...",t.deleteCard(E).then((()=>{q.remove(),l(y)})).catch((e=>console.error(`Error: ${e}`))).finally((()=>{o.textContent=n}))})),f.addEventListener("click",(()=>l(y))),S.addEventListener("click",(()=>l(y))),k=validationConfig,document.querySelectorAll(k.formSelector).forEach((t=>{((t,o)=>{const n=Array.from(t.querySelectorAll(o.inputSelector)),r=t.querySelector(o.submitButtonSelector);console.log(n),console.log(r),e(n,r,o),n.forEach((a=>{a.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?((e,t,o)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(o.inputErrorClass)})(e,t,o):((e,t,o,n)=>{const r=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),r.textContent=o})(e,t,t.validationMessage,o)})(t,a,o),e(n,r,o)}))}))})(t,k)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,