!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,n):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a)}))}let s,i;const c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9761a594-3fe1-46bc-8b2b-b1c551adb983","Content-Type":"application/json"}});c.getAppInfo().then((e=>{let[t,r]=e;t.reverse(),t.forEach((e=>{H(e)})),u.src=r.avatar,m.textContent=r.name,_.textContent=r.about})).catch(console.error);const l=document.querySelectorAll(".modal__close-btn"),d=document.querySelector(".profile__edit-btn"),u=document.querySelector(".profile__avatar"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),h=document.querySelector(".profile__add-btn"),v=document.querySelector(".profile__avatar-btn"),f=document.querySelector("#edit-modal"),y=f.querySelector("#edit-profile-form"),S=f.querySelector("#profile-name-input"),b=f.querySelector("#profile-description-input"),p=document.querySelector("#card-modal"),q=p.querySelector("#card-form"),g=p.querySelector(".modal__submit-btn"),k=p.querySelector("#card-link-input"),E=p.querySelector("#card-caption-input"),L=document.querySelector("#avatar-modal"),C=L.querySelector("#edit-avatar-form"),U=L.querySelector("#profile-avatar-input"),x=L.querySelector(".modal__submit-btn"),$=document.querySelector("#delete-modal"),A=$.querySelector(".modal__form"),I=$.querySelector(".modal__submit-btn_type_cancel"),T=document.querySelector("#card-template").content,w=document.querySelector(".cards__list"),P=document.querySelector("#preview-modal"),B=document.querySelector(".modal__image"),D=document.querySelector(".modal__caption");function N(e){e.target===e.currentTarget&&J(e.currentTarget)}function O(e){"Escape"===e.key&&J(document.querySelector(".modal_opened"))}function j(e){e.classList.add("modal_opened"),document.addEventListener("keydown",O),e.addEventListener("mousedown",N)}function J(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",O),e.removeEventListener("mousedown",N))}function H(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=T.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return e.isLiked&&o.classList.add("card__like-btn_liked"),n.src=e.link,n.alt=e.alt,r.textContent=e.name,o.addEventListener("click",(t=>function(e,t){const r=e.target,n=r.classList.contains("card__like-btn_liked");c.changeLikeStatus(t,n).then((e=>{e?(e=!0,r.classList.toggle("card__like-btn_liked")):(e=!1,r.classList.toggle("card__like-btn_liked"))})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){s=e,i=t,j($)}(t,e._id))),n.addEventListener("click",(()=>function(e){B.src=e.link,B.alt=e.name,D.textContent=e.name,j(P)}(e))),t}(e);w[t](r)}var R;l.forEach((e=>{e.addEventListener("click",(e=>{J(e.target.closest(".modal"))}))})),v.addEventListener("click",(()=>{j(L)})),C.addEventListener("submit",(function(t){a((function(){return c.editAvatarInfo(U.value).then((t=>{u.src=t.avatar,r(x,e),J(L)}))}),t)})),d.addEventListener("click",(()=>{var r,n;S.value=m.textContent,b.value=_.textContent,r=y,n=e,[S,b].forEach((e=>{t(r,e,n)})),j(f)})),y.addEventListener("submit",(function(e){a((function(){return c.editUserInfo({name:S.value,about:b.value}).then((e=>{m.textContent=e.name,_.textContent=e.about,J(f)}))}),e)})),h.addEventListener("click",(()=>{j(p)})),q.addEventListener("submit",(function(t){a((function(){return c.addCard({name:E.value,link:k.value}).then((t=>{H(t),r(g,e),J(p)}))}),t)})),A.addEventListener("submit",(function(e){a((function(){return c.deleteCard(i).then((()=>{s.remove(),J($)}))}),e,"Deleting...")})),I.addEventListener("click",(()=>{J($)})),R=e,document.querySelectorAll(R.formSelector).forEach((e=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);console.log(o),console.log(a),n(o,a,r),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)}))}))})(e,R)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,