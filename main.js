!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?((e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)})(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this.request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this.request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this.request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this.request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addCard(e){let{name:t,link:r}=e;return this.request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this.request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this.request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8821c207-7c9b-4450-ae25-85456081faad","Content-Type":"application/json"}});function n(e){e.target===e.currentTarget&&d(e.currentTarget)}function a(e){"Escape"===e.key&&d(document.querySelector(".modal_opened"))}function s(e){e.classList.add("modal_opened"),document.addEventListener("keydown",a),e.addEventListener("mousedown",n)}function d(e){e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",a),e.removeEventListener("mousedown",n))}function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){if(!cardTemplate)return console.error("Error: cardTemplate is not defined or not found."),null;const t=cardTemplate.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-btn_liked"),n.addEventListener("click",(t=>handleLike(t,e._id))),a.addEventListener("click",(()=>handleDeleteCard(t,e._id))),o.addEventListener("click",(()=>handleImageClick(e))),t}(e);r&&cardsList[t](r)}document.addEventListener("DOMContentLoaded",(()=>{const n=document.querySelectorAll(".modal__close-btn"),a=document.querySelector("#card-template")?.content,l=document.querySelector(".cards__list");if(console.log("Card template:",a),!a)return void console.error("Error: Card template not found.");const c=document.querySelector(".profile__avatar"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description");o.getAppInfo().then((e=>{let[t,r]=e;console.log("Fetched cards:",t),0===t.length?(console.log("No cards available"),l.innerHTML="<p>No cards to display.</p>"):(t.reverse(),t.forEach((e=>{i(e)}))),c.src=r.avatar,u.textContent=r.name,m.textContent=r.about})).catch(console.error),n.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>d(t)))}));const h=document.querySelector(".profile__avatar-btn"),_=document.querySelector("#avatar-modal"),v=_.querySelector("#edit-avatar-form");h.addEventListener("click",(()=>s(_))),v.addEventListener("submit",handleAvatarSubmit);const p=document.querySelector(".profile__edit-btn"),f=document.querySelector("#edit-modal"),y=f.querySelector("#edit-profile-form"),S=f.querySelector("#profile-name-input"),b=f.querySelector("#profile-description-input");p.addEventListener("click",(()=>{var r,o;S.value=u.textContent,b.value=m.textContent,r=y,o=e,[S,b].forEach((e=>{t(r,e,o)})),s(f)})),y.addEventListener("submit",handleEditProfileSubmit);const q=document.querySelector(".profile__add-btn"),E=document.querySelector("#card-modal"),L=E.querySelector("#card-form");q.addEventListener("click",(()=>s(E))),L.addEventListener("submit",handleAddCardSubmit);const C=document.querySelector("#delete-modal"),k=C.querySelector(".modal__form"),g=C.querySelector(".modal__submit-btn_type_cancel");var U;k.addEventListener("submit",handleDeleteCardSubmit),g.addEventListener("click",(()=>d(C))),U=e,document.querySelectorAll(U.formSelector).forEach((e=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);console.log(n),console.log(a),r(n,a,o),n.forEach((s=>{s.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)}))}))})(e,U)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,